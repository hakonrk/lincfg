− Oppsett av terminal o.l.

−− Norske tegn i Emacs
Legg følgende i ´~/.emacs´:
´
(standard-display-european t)
(set-input-mode (car (current-input-mode))
                (nth 1 (current-input-mode))
                0)
´

−− Terminfo/termcap
Hent først ut en nogenlunde riktig terminfo entry med kommandoen
´infocmp -I xterm-color >xterm.ti´.  Editer denne filen og
pass på at følgende verdier er satt:
´
kdch1=\177
kf1=\EOP
kf2=\EOQ
kf3=\EOR
kf4=\EOS
khome=\E[1~
kend=\E[4~
´
Det er ‗ekstremt‗ viktig at ingen andre taster er satt til samme
verdi som disse.  (Spesielt pleier ´kslt´ å være satt til samme
verdi som ´kend´ skal ha.)  Pass på at ´xterm.ti´ har beskrivelsen
´xterm´ i headeren.  Kompiler filen med kommandoen
´tic xterm.ti´.  Som vanlig bruker vil de kompilerte filene plasseres
i ´~/.terminfo/´, og disse har prioritet over ´/usr/share/terminfo/´.

Etter at ´xterm´ entryen er laget, konverter terminfo databasen til
termcap med kommandoen ´infocmp -C -r xterm >xterm.termcap´.  Erstatt
gammel entry i ´/etc/termcap´ med denne nye utgaven.

− FTP
−− Automatisk bruke anonymous login for FTP
Opprett følgende ´~/.netrc´:
´
default login anonymous password hakonrk@birk126.studby.uio.no
´

− VIM
−− YouCompleteMe
´
cd ~/.vim/pack/hakonrk/opt
git clone --recurse-submodules https://github.com/Valloric/YouCompleteMe
cd YouCompleteMe
python3.7 ./install.py --clangd-completer --clang-completer
cd ~/.vim/doc
ln -s ../pack/hakonrk/opt/YouCompleteMe/doc YouCompleteMe
vim +'helptags ~/.vim/doc' +q
´
Legg så følgende i ´~/.vim/plugin/config-ycm.vim´:
´
let g:ycm_use_clangd = 1
let g:ycm_key_invoke_completion = '°'
let g:ycm_key_list_stop_completion = ['<C-x>', '<CR>']

let g:ycm_clangd_args = ["-background-index"]

if findfile('compile_commands.json', expand('%:p:h') . ';') != ''
  packadd YouCompleteMe
  let g:ale_linters['c'] = []
  let g:ale_linters['cpp'] = []
endif
´

− Brave
−− Sett til default browser
´
unset BROWSER
xdg-settings set default-web-browser brave-browser.desktop
´

− Firefox
−− Backspace-oppførsel
Gå til ´about:config´ og sett
´
browser.backspace_action=0
´

−− Skru av versjonskontroll på add-ons
Under ´about:config´, legg til
´
extensions.checkCompatibility = false
extensions.checkUpdateSecurity = false
´

−− Zoom-oppførsel
For å få Firefox 3 sin zoom funksjon til å virke som Firefox 2, sett følgende
verdier i «about:config − about:config»:
´
mousewheel.withcontrolkey.action  = 3
mousewheel.withcontrolkey.numlines = -1
browser.zoom.full = false
´

−− Thumb-buttons (back/forward)
For å få tommelknappene til å funke som i Firefox 2, legg følgende inn i about:config:
´
mousewheel.horizscroll.withnokey.action = 2
mousewheel.horizscroll.withnokey.numlines = -1
mousewheel.horizscroll.withnokey.sysnumlines = false
´

−− Cache-plassering
For å endre Firefox's cache katalog, sett
´browser.cache.disk.parent_directory´ til f.eks. ´/tmp´
i «about:config − about:config».

− ImageMagick
−− Liste formater
Gjør ´identify -list format´ for å liste formatene støttet av ImageMagick.

−− Lage montage
Gitt at man har 9 bilder (´[1-9].jpg´) som skal slås sammen til étt
bilde (3x3), og hvert bilde i det sammensatte bildet skal være 512x288
uten marginer, og vi ønsker å ignorere aspect ratio for å få dem til
512x288, så bruker man følgende kommando:
´
montage -resize '512x288!' -geometry 512x288+0+0 -tile 3x3 ?.jpg montage.jpg
´
Andre aktuelle flagg er ´-quality “Q”´, ´-background “COLOR”´.

−− Konvertere RAW YUV til vanlige bilder (uten extension)
Normalt vil
´
convert -size “W”x“H” yuv:“RAWYUV-FILE” “OUTPUT-IMAGE”
´
Bruk ´-depth´ dersom det ikke er vanlig 12 bits per pixel YUV.

−− Resizing
«Resize − http://www.imagemagick.org/script/command-line-options.php#resize»-operasjonen
støtter bl.a. følgende funksjonalitet:
´
convert -resize 50%  ¡# Halverer i begge dimensjoner
convert -resize “W”x“H”  ¡# W og H er maksverdier; behold aspect ratio
convert -resize “W”x“H”! ¡# Resize til eksakt W x H og ignorer aspect ratio
´
Resizing-metode kan spesifiseres med «-filter − http://www.imagemagick.org/script/command-line-options.php#filter» opsjonen.

−− Cropping/clipping
«Crop − http://www.imagemagick.org/script/command-line-options.php#crop»-operasjonen
klipper ut et rektangulært område av bildet:
´
convert -crop 50% “FROM” “TO” ¡# Lager fire bilder (to-[0-3]); ett per kvadrant
convert -crop “W”x“H”+“x”+“y”     ¡# Lager ett bilde i W x H på (x, y); (0,0) = top-left
´

−− Colorspace / type
For å konvertere colorspace bruker man
«-type − http://www.imagemagick.org/script/command-line-options.php#type»
flagget.  F.eks. bruker man
´
convert -type Grayscale
´
for å lage et grayscale bilde.

− Nettverk

−− NAT
Bruk noe à la følgende rc-script for å sette opp NAT:
´
#!/bin/sh

echo -n "Configuring firewall... "

wan_iface=$(ip route get 1.1.1.1 | grep -Po '\s+dev\s+\K\S+')
lan_iface=$(ip route get 10.0.0.1 | grep -Po '\s+dev\s+\K\S+')

¡# Flush all chains in the default table.
iptables -F

¡# Flush all chains in the nat table.
iptables -t nat -F

¡# Delete all user-defined chains in the default table.
iptables -X

¡# Delete all user-defined chains in the nat table.
iptables -t nat -X

¡# Set up IP forwarding and masquerading.
iptables -t nat -A POSTROUTING -o $wan_iface -j MASQUERADE
iptables -A FORWARD -i $lan_iface -j ACCEPT

¡# Enable packet forwarding in the kernel.
echo 1 >/proc/sys/net/ipv4/ip_forward

¡# This chain is used to hold temporary rules that override all rejections.
iptables -N tmpaccept
iptables -A INPUT -j tmpaccept

¡# Port forwarding
iptables -t nat -A PREROUTING -i $wan_iface -p tcp --dport 222 -j DNAT --to-destination 10.0.0.4:22

¡# Allow all traffic from loopback device.
iptables -A INPUT  -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT

¡# Allow everything on the LAN.
iptables -A INPUT  -i $lan_iface -j ACCEPT
iptables -A OUTPUT -o $lan_iface -j ACCEPT

¡# Ports/services open to the world on the firewall box.
iptables -A INPUT -i $wan_iface -p tcp --dport 22222 -j ACCEPT
iptables -A INPUT -i $wan_iface -p tcp --dport 10333:10399 -j ACCEPT
iptables -A INPUT -i $wan_iface -p icmp --icmp-type echo-request -j ACCEPT

¡# Accept other incoming data from outside only for established connections.
iptables -A INPUT -i $wan_iface -m state --state RELATED,ESTABLISHED -j ACCEPT

¡# Drop all non-forwarded ports!  This is fucking important!
iptables -A INPUT -i $wan_iface -p tcp -j REJECT --reject-with tcp-reset
iptables -A INPUT -i $wan_iface -j REJECT

echo " done"
´

−− Traffic-shaping
Lag et rc.wshaper script basert på følgende mal:
´
#!/bin/sh

¡# Set the following values to somewhat less than your actual download
¡# and uplink speed. In kilobits. Also set the device that is to be shaped.
DOWNLINK=5500
UPLINK=905
DEV=eth1

¡# Low priority OUTGOING traffic -- you can leave this blank if you want
¡# low priority source netmasks.
NOPRIOHOSTSRC=

¡# Low priority destination netmasks.
NOPRIOHOSTDST=

¡# Low priority source ports.
NOPRIOPORTSRC=

¡# Low priority destination ports.
NOPRIOPORTDST=

if [[ $1 == status ]]; then
    tc -s qdisc ls dev $DEV
    tc -s class ls dev $DEV
    exit
fi

¡# Clean existing down- and uplink qdiscs, hide errors.
tc qdisc del dev $DEV root    2>/dev/null >/dev/null
tc qdisc del dev $DEV ingress 2>/dev/null >/dev/null

if [[ $1 = stop ]]; then
    exit
fi

¡# -----------------------------------------------------------------------------
¡# Uplink
¡# -----------------------------------------------------------------------------

¡# Install root HTB, point default traffic to 1:20.
tc qdisc add dev $DEV root handle 1: htb default 20

¡# Shape everything at $UPLINK speed -- this prevents huge queues in your
¡# DSL modem which destroy latency.
tc class add dev $DEV parent 1: classid 1:1 htb rate ${UPLINK}kbit burst 6k

¡# High prio class 1:10.
tc class add dev $DEV parent 1:1 classid 1:10 htb rate ${UPLINK}kbit \
   burst 6k prio 1

¡# Bulk & default class 1:20 - gets slightly less traffic, 
¡# and a lower priority.
tc class add dev $DEV parent 1:1 classid 1:20 htb rate $[9*$UPLINK/10]kbit \
   burst 6k prio 2

tc class add dev $DEV parent 1:1 classid 1:30 htb rate $[8*$UPLINK/10]kbit \
   burst 6k prio 2

¡# All get Stochastic Fairness:
tc qdisc add dev $DEV parent 1:10 handle 10: sfq perturb 10
tc qdisc add dev $DEV parent 1:20 handle 20: sfq perturb 10
tc qdisc add dev $DEV parent 1:30 handle 30: sfq perturb 10

¡# TOS Minimum Delay (ssh, NOT scp) in 1:10:
tc filter add dev $DEV parent 1:0 protocol ip prio 10 u32 \
      match ip tos 0x10 0xff  flowid 1:10

¡# ICMP (ip protocol 1) in the interactive class 1:10 so we 
¡# can do measurements & impress our friends:
tc filter add dev $DEV parent 1:0 protocol ip prio 10 u32 \
        match ip protocol 1 0xff flowid 1:10

¡# To speed up downloads while an upload is going on, put ACK packets in
¡# the interactive class:
tc filter add dev $DEV parent 1: protocol ip prio 10 u32 \
   match ip protocol 6 0xff \
   match u8 0x05 0x0f at 0 \
   match u16 0x0000 0xffc0 at 2 \
   match u8 0x10 0xff at 33 \
   flowid 1:10

¡# Rest is 'non-interactive' ie 'bulk' and ends up in 1:20.

¡# Some traffic however suffers a worse fate
for i in $NOPRIOPORTDST; do
    tc filter add dev $DEV parent 1: protocol ip prio 14 u32 \
       match ip dport $i 0xffff flowid 1:30
done

for i in $NOPRIOPORTSRC; do
    tc filter add dev $DEV parent 1: protocol ip prio 15 u32 \
       match ip sport $i 0xffff flowid 1:30
done

for i in $NOPRIOHOSTSRC; do
    tc filter add dev $DEV parent 1: protocol ip prio 16 u32 \
       match ip src $i flowid 1:30
done

for i in $NOPRIOHOSTDST; do
    tc filter add dev $DEV parent 1: protocol ip prio 17 u32 \
       match ip dst $i flowid 1:30
done

¡# Rest is 'non-interactive' ie 'bulk' and ends up in 1:20.
tc filter add dev $DEV parent 1: protocol ip prio 18 u32 \
   match ip dst 0.0.0.0/0 flowid 1:20

¡
¡# -----------------------------------------------------------------------------
¡# Downlink
¡# -----------------------------------------------------------------------------

¡# Slow downloads down to somewhat less than the real speed to prevent queuing
¡# at our ISP.  Tune to see how high you can set it.  ISPs tend to have *huge*
¡# queues to make sure big downloads are fast.

¡# Attach ingress policer:
tc qdisc add dev $DEV handle ffff: ingress

¡# Filter *everything* to it (0.0.0.0/0), drop everything that's coming in too
¡# fast:
tc filter add dev $DEV parent ffff: protocol ip prio 50 u32 match ip src \
   0.0.0.0/0 police rate ${DOWNLINK}kbit burst 10k drop flowid :1
´

−− Feilsøking og rekonfigurering av router
Finn ut hvilken statisk IP-adresse routeren kan nås på:
´
¡# Eksempelverdi:
ROUTER_IP=“192.168.1.1”
´

Gi deretter PC-en som skal snakke med routeren en statisk IP-adresse
som ikke er i bruk:
´
¡# Eksempelverdier:
PC_NETWORK_INTERFACE=“eth0”
PC_IP=“192.168.1.2”

ip link set $PC_NETWORK_INTERFACE up
ip addr add $PC_IP/24 dev $PC_NETWORK_INTERFACE
ip route add default “192.168.1.0/24” via $ROUTER_IP
´

Det skal da være mulig å gå til ´http://$ROUTER_IP/´ og logge inn.

−− iproute2 cheat sheet
´
¡# Show information for all addresses
ip addr

¡# Display information only for device em1
ip addr show dev em1

¡# Show information for all interfaces
ip link

¡# Display information only for device em1
ip link show dev em1

¡# Display interface statistics
ip -s link

¡# List all of the route entries in the kernel
ip route

¡# Display multicast information for all devices
ip maddr

¡# Display multicast information for device em1
ip maddr show dev em1

¡# Display neighbour objects
ip neigh

¡# Show the ARP cache for device em1
ip neigh show dev em1

¡# Add mutlicast address 33:33:00:00:00:01 to em1
ip maddr add 33:33:00:00:00:01 dev em1

¡# Delete address 33:33:00:00:00:01 from em1
ip maddr del 33:33:00:00:00:01 dev em1

¡# Add address 192.168.1.1 with netmask 24 to device em1
ip addr add 192.168.1.1/24 dev em1

¡# Remove address 192.168.1.1/24 from device em1
ip addr del 192.168.1.1/24 dev em1

¡# Bring em1 online 
ip link set em1 up

¡# Bring em1 offline 
ip link set em1 down

¡# Set the MTU on em1 to 9000
ip link set em1 mtu 9000

¡# Enable promiscuous mode for em1
ip link set em1 promisc on

¡# Add a default route (for all addresses) via the local gateway 192.168.1.1 that can be reached on device em1
ip route add default via 192.168.1.1 dev em1

¡# Add a route to 192.168.1.0/24 via the gateway at 192.168.1.1
ip route add 192.168.1.0/24 via 192.168.1.1

¡# Add a route to 192.168.1.0/24 that can be reached on device em1
ip route add 192.168.1.0/24 dev em1

¡# Delete the route for 192.168.1.0/24 via the gateway at 192.168.1.1
ip route delete 192.168.1.0/24 via 192.168.1.1

¡# Replace the defined route for 192.168.1.0/24 to use device em1
ip route replace 192.168.1.0/24 dev em1

¡# Display the route taken for IP 192.168.1.5
ip route get 192.168.1.5

¡# Add address 192.168.1.1 with MAC 1:2:3:4:5:6 to em1
ip neigh add 192.168.1.1 lladdr 1:2:3:4:5:6 dev em1

¡# Invalidate the entry for 192.168.1.1 on em1
ip neigh del 192.168.1.1 dev em1

¡# Replace the entry for address 192.168.1.1 to use MAC 1:2:3:4:5:6 on em1
ip neigh replace 192.168.1.1 lladdr 1:2:3:4:5:6 dev em1

¡# Send ARP request to 192.168.1.1 via interface eth0
arping -I eth0 192.168.1.1

¡# Check for duplicate MAC addresses at 192.168.1.1 on eth0
arping -D -I eth0 192.168.1.1

¡# Display ring buffer for eth0
ethtool -g eth0

¡# Display driver information for eth0
ethtool -i eth0

¡# Identify eth0 by sight, typically by causing LEDs to blink on the network port
ethtool -p eth0

¡# Display network and driver statistics for eth0
ethtool -S eth0

¡# Show all sockets (listening and non-listening)
ss -a

¡# Show detailed socket information
ss -e

¡# Show timer information
ss -o

¡# Do not resolve addresses
ss -n

¡# Show process using the socket
ss -p

¡# Equivalents:
arp -a                                                       ip neigh
arp -v                                                       ip -s neigh
arp -s 192.168.1.1 1:2:3:4:5:6                               ip neigh add 192.168.1.1 lladdr 1:2:3:4:5:6 dev eth1
arp -i eth1 -d 192.168.1.1                                   ip neigh del 192.168.1.1 dev eth1
ifconfig -a                                                  ip addr
ifconfig eth0 down                                           ip link set eth0 down
ifconfig eth0 up                                             ip link set eth0 up
ifconfig eth0 192.168.1.1                                    ip addr add 192.168.1.1/24 dev eth0
ifconfig eth0 netmask 255.255.255.0                          ip addr add 192.168.1.1/24 dev eth0
ifconfig eth0 mtu 9000                                       ip link set eth0 mtu 9000
ifconfig eth0:0 192.168.1.2                                  ip addr add 192.168.1.2/24 dev eth0
netstat                                                      ss
netstat -neopa                                               ss -neopa
netstat -g                                                   ip maddr
route                                                        ip route
route add -net 192.168.1.0 netmask 255.255.255.0 dev eth0    ip route add 192.168.1.0/24 dev eth0
route add default gw 192.168.1.1                             ip route add default via 192.168.1.1
´

−− Privat DNS/DHCP med dnsmasq
Start med å skru av DHCP på NAT-router, og sett opp dnsmasq-boksen
slik at den har statisk IP.  Opprett en ´/etc/hosts.dnsmasq´ i samme
format som ´/etc/hosts´ som mapper alle statiske IP-er på LAN-et til
hostname.  Opprett så en eller flere filer i ´/etc/dnsmasq.d´
med følgende innhold:
´
¡# All reverse lookups for private IP ranges (ie 192.168.x.x, etc) which are not
¡# found in /etc/hosts or the DHCP leases file are answered with "no such
¡# domain" rather than being forwarded upstream.
bogus-priv

¡# Never forward plain names (without a dot or domain part).
domain-needed

¡# Don't read the hostnames in /etc/hosts, since it might contain mappings that
¡# should not be available in DNS (for example, if /etc/hosts maps the hostname
¡# of the dnsmasq server to 127.0.0.1, other clients on the LAN would resolve
¡# the dnsmasq server name to 127.0.0.1, which is obviously wrong).
no-hosts

¡# Makes it so that addresses from alternative hosts-files
¡# (e.g., ~/src/misc/etc/hosts) also can be reached with <name>.<domain>
¡# where <domain> is the value set in domain=<...>
expand-hosts
domain=venod.com

¡# We don't use /etc/hosts, but these extra files are formatted the same
¡# way, and do not have the 127.0.0.1-problem that /etc/hosts has.
addn-hosts=/home/hakonrk/src/misc/etc/hosts
addn-hosts=/etc/dnsmasq.d/hosts/static
¡#addn-hosts=/etc/dnsmasq.d/hosts/dynamic

¡# DHCP clients gets these values for gateway and DNS server
dhcp-option=option:router,10.0.0.3
dhcp-option=option:dns-server,10.0.0.3

¡# IP addresses of the upstream DNS servers to use for external lookups.
server=1.1.1.1
server=1.0.0.1
server=8.8.4.4
server=8.8.8.8

¡# *.venod.com is a local domain, except for lincfg and wincfg that are external.
server="/lincfg.venod.com/#"
server="/wincfg.venod.com/#"

¡# Never forward DNS requests for *.venod.com to external servers.
local=/venod.com/

¡# On the LAN, the bare domain (venod.com) should resolve to the gateway.
host-record=venod.com,10.0.0.3

¡# DHCP range for clients without a static map (12 hour lease).
dhcp-range=10.0.0.100,10.0.0.199,12h

¡# Static DHCP mappings.
dhcp-host=34:97:F6:31:82:C3,10.0.0.4    ¡# workstation
dhcp-host=30:9C:23:15:E1:71,10.0.0.5    ¡# laptop fixed
dhcp-host=C0:B6:F9:E5:53:49,10.0.0.8    ¡# laptop wifi
dhcp-host=30:59:B7:E9:A8:C4,10.0.0.11   ¡# xbox one
dhcp-host=F8:27:93:E1:9B:6E,10.0.0.13   ¡# ipad
dhcp-host=E0:B9:A5:AD:02:26,10.0.0.33   ¡# fob
¡#dhcp-host=00:12:5A:C3:48:AA,10.0.0.36   # xbox 360
dhcp-host=A0:6F:AA:45:CE:B2,10.0.0.55   ¡# lg tv oled 55 b6v
¡#dhcp-host=14:D6:4D:E7:E9:DB,10.0.0.60   # d-link dir600 AP
¡#dhcp-host=A4:D1:D2:48:C4:22,10.0.0.61   # d-link dir600 AP (extra IP??)
dhcp-host=8E:3B:AD:0E:DC:3D,10.0.0.68   ¡# Netgear Nighthawk X6S WiFi Extender
dhcp-host=44:D8:78:41:91:E6,10.0.0.75   ¡# Philips 75" "The One" TV
dhcp-host=00:23:C1:05:41:EE,10.0.0.80   ¡# verisure box
dhcp-host=74:40:BB:7B:EB:8E,10.0.0.81   ¡# hp color laserjet pro mfp m281fdw
dhcp-host=6C:C7:EC:57:ED:68,10.0.0.88   ¡# samsung galaxy s8+
´
Deretter må man sette opp dnsmasq-boksens ´/etc/resolv.conf´
til å inneholde seg selv (eks: ´nameserver 10.0.0.3´).  Det er ikke
nødvendig med eksterne DNS-servere siden de er registrert med egne
´server´-linjer i configfilene til dnsmasq.  Gjør så på DNS-serveren:
´
sudo service network restart
sudo service dnsmasq restart
´
Alle DHCP-klienter på LAN-et må så be om ny IP.  (For Linux-bokser må
´/etc/sysconfig/networking/devices/ifcfg-<interface>´ oppdateres ved
at DNS-linjene slettes; man bør også slette ´SEARCH=´ linjen.)

−− Netboot (PXE) vha. dnsmasq
Følg instruksjonene ovenfor for å sette opp dnsmasq, og opprett i tillegg
´/etc/dnsmasq.d/netboot.cfg´:
´
¡# Look for files to transfer using TFTP relative to the given directory.
tftp-root=/local/tftp

¡# Enable the TFTP server function.
enable-tftp

¡# Set the boot filename for BOOTP.
dhcp-boot=pxelinux.0

¡# Force "simple and safe" behavior to support old/broken clients.
dhcp-no-override

¡# Specify a boot option.  Note that ".0" is automatically added
¡# to the boot image basename ("pxelinux" in this case).
pxe-service=x86PC, "Boot from network", pxelinux
´
Opprett så ´/local/tftp´:
´
¡# Create the TFTP root tree.
mkdir /local/tftp/pxelinux.cfg

¡# Copy syslinux boot files to TFTP root.
dnf install syslinux
cp /usr/share/syslinux/pxelinux.0 /local/tftp
cp /usr/share/syslinux/menu.c32 /local/tftp

¡# Install the memtest image, for easy testing.
wget -qO- 'http://www.memtest.org/download/5.01/memtest86+-5.01.bin.gz' | gunzip >/local/tftp/memtest

¡# Create the syslinux boot config.
cat >/local/tftp/pxelinux.cfg/default <<\EOF
default menu.c32
prompt 0

menu title PXE Boot Menu

label memtest86
    menu label memtest86
    kernel memtest
    append -
EOF
´

− Scanning

−− scanimage
Første gang scanimage brukes, er det lurt å sjekke hvilke flagg som
støttes av scanneren.  Dette gjøres med kommandoen ´scanimage -h´
som vil kommunisere med scanneren for å finne ut egenskapene.
<p>
Eksempel på scanning av étt dokument:
´
scanimage --mode 'True Gray' --resolution 150 >“foo.pnm”
´

Eksempel på scanning av flere dokumenter:
´
scanimage --batch --mode 'True Gray' --resolution 150
´

− Utskrift

−− CUPS
Dersom printeren ikke er støttet av standardinstallasjonen, last først ned
riktig PPD-fil fra «LinuxPrinting.org −  http://www.linuxprinting.org/»
og kopier denne til ´/usr/share/cups/model´.  Restart ´cups´ med
´/etc/rc.d/rc.cups restart´ og logg inn på ´http://localhost:631/admin´ for å
legge til den nye skriveren.  Kun “Name”-feltet trenger å fylles ut i den
første dialogen.  Alternativt kan skriveren legges inn fra kommandolinjen.
Eks. for HL-1250:
´
lpadmin -p HL-1250 -E -v usb://Brother/HL-1250%20series -m Brother-HL-1250-hl1250.ppd
´
Device-navnet kan finnes med ´lpinfo -v´ dersom man bruker USB-skriver.  For en
Windows-basert Samba-skriver må man ha device-navnet som følger:
´smb://“USER”:“PASSWORD”@“SERVER”/“SHARENAME”´.  I tilfellet der skriveren er
delt for alle brukere skal passordet droppes, og ´“USER”´ skal være ´guest´.
<b>Husk å konfigurere skriveren for papirsstørrelse osv. via web-interfacet så
snart skriveren er lagt inn!</b>
<p>
Windows kan bruke skriveren via Samba og driveren “MS Publisher Imagesetter”
som er listet under produsent “Generic”.  For å fikse problemet med at det
skrives ut to søppelsider for hver utskrift må man installere
´foomatic-gswrapper´ som et kjørbart script under ´/usr/bin´.  <url:
http://www.linuxprinting.org/gswrapper.html> gswrapper kan lastes ned
her.</url>  Mer at denne metoden krever at ´/usr/bin/foomatic-rip´ er
installert, og denne kommer med ´hpijs´ (´hpijs´ inneholder også støtte for de
fleste av HPs blekkskrivere).
<p>
Det kan skje at CUPS setter printeren som inaktiv dersom man prøver
å ta en utskrift før printeren er klar (f.eks. mens den varmer opp).
Dette kan man fikse ved å gjøre ´enable “NAME”´, der ´“NAME”´ er
navnet på skriveren (´HL-1250´ i eksempelet over).  Navnet kan ellers
finnes med f.eks. ´lpc status´.
<p>
Dersom skriveren skal aksesseres via LAN (eksempelvis 10.0.0.0/24),
pass på at ´<Location /> ... </Location>´ inneholder ´Allow From 10.0.0.0/24´.
For å aksessere en CUPS-skriver med IP-adresse 10.0.0.4 og navn
HL-1250 i Windows, gå til ´Add Printer Wizard´, legg til en nettverksskriver
med adresse
´
http://10.0.0.4:631/printers/HL-1250
´

−− Psutils
For å få flere sider på ett ark, bruk
´
psnup -2 -pa4 -b0cm -m0cm “foo.ps” >“bar.ps”
´
Her får man ingen rammer, og minst mulig marginer.  ´-b´
gir marginene rundt hver av de krympede sidene, mens ´-m´
er marginene på selve papiret, rundt alle de krympede sidene.

− git
−− Starte nytt prosjekt
Lag først en lokal arbeidskatalog.  Eks:
´
¡# Lag katalogen foo hvis den ikke allerede eksisterer og gjør den til et git repo.
git init “foo”

¡# Opprett filer som skal ha versjonskontroll.
cd “foo”
echo hello >hello.txt
echo world >world.txt

¡# Legg til alle filer som ikke matcher noe i .gitignore
git add .

¡# Lag en commit med de nye filene.
git commit -m "“DESCRIPTION”"
´
For å sette en remote upstream på en SSH server, gjør:
´
ssh “SERVER” git init --bare /path/to/git/repos/foo.git
git remote add origin “SERVER”:/path/to/git/repos/foo.git
git push --set-upstream origin master
´

−− Alias for å forenkle URL-er
Legg inn
´
[url "ssh://foo.bar.com:22222/home/fred/git/"]
        insteadOf = fred:
´
for å kunne bruke ´fred:´ i stedet for
´ssh://foo.bar.com:22222/home/fred/git/´ i enhver URL.

−− Jobbe på egen branch avledet av upstream
Gå til eget remote git repository, og gjør
´
git clone --bare “UPSTREAM-REPO-URL” “LOCAL-REPO-NAME”
´
Denne kan må så klone og bruke på vanlig måte på arbeidsstasjonen.
Når man skal hente endringer fra upstream anbefales det at man først
gjør
´
git remote add upstream “UPSTREAM-REPO-URL”
´
Deretter funker det å gjøre
´
git fetch upstream
git merge upstream/master
´
for å hente og merge in upstreams endringer.

−− Se dine endringer som upstream ikke har merget ennå
Gjør ´git diff upstream/master..master´ for å se endringene som
upstream ennå ikke har merget.

−− Lage ny branch som også legges på remote repo
Lag først ny branch med
´
git checkout -b “MY-BRANCH”
´
Gjør endringer, og commit disse.  Rediger så ´.git/config´ og
legg til
´
[branch "“MY-BRANCH”"]
        remote = origin
        merge = refs/heads/“MY-BRANCH”
´
Gjør til slutt ´git push origin “MY-BRANCH”´.  Deretter vil ny
branch være tilgjengelig for andre som sjekker ut fra remote.
De kan ta ´git checkout “MY-BRANCH”´ etter ´git pull´ for å komme
inn på samme branch.

−− Flytte 'master' noen hakk tilbake, og lage ny branch fra tilsvarende sted
Dersom man har gjort X antall commits på master branch, og ønsker at alle
commits etter ´“REVISION”´ (SHA1 hash) skal tilhøre ´“NEW-BRANCH”´, så gjør
man:
´
git branch “NEW-BRANCH”
git reset --hard “REVISION”
git checkout “NEW-BRANCH”
´

− Tcpdump

−− Vanlige filtre
´
iface=$(ip route get 1.1.1.1 | perl -ne 'print if s{^.*?\sdev\s(\S+)\s.*$}{$1}')

¡# Dumpe alle pakker som går til/fra example.com port 80 (http):
sudo tcpdump -i$iface -s0 -w/tmp/dump host example.com and port http
´


− Indenting

−− astyle
For K&amp;R style,
´
astyle -A3
´

− IRC

−− Endre nummer på vindu
For å gi nåværende vindu nummeret “N”, så gjør man:
´
/window number “N”
´

− SSH

−− Nøkler
Lag nøkler med
´
ssh-keygen -t rsa1 -N '' -f ~/.ssh/identity
ssh-keygen -t rsa  -N '' -f ~/.ssh/id_rsa
ssh-keygen -t dsa  -N '' -f ~/.ssh/id_dsa
´
(For SSH1 trengs bare den første, og kun én av de to siste er nødvendig
for SSH2.) ´cat´ deretter innholdet av klientes ´~/.ssh/*.pub´ til
´~/.ssh/authorized_keys´ på serveren.

−− SSH agent
Dersom nøkler med passphrase brukes, så kan man likevel slippe
å skrive passphrase ved hver login dersom man oppretter en
´ssh-agent´ session.  Dette kan f.eks. gjøres med
´ssh-agent “SHELL”´, der ´“SHELL”´ kan være et vanlig shell,
som ´/bin/sh´, eller f.eks. ´startx´.  Når man er inne i en
´ssh-agent´ session, så kan man legge til, slette, og liste nøkler
med ´ssh-add´:
´
ssh-add ~/.ssh/id_rsa           ¡# add key
ssh-add -d ~/.ssh/id_rsa        ¡# delete key
ssh-add -l                      ¡# list active keys
´
Man må så skrive inn passphrase for nøkkelen, men deretter huskes
den så lenge man er inne i ´ssh-agent´ session'en.  I forbindelse
med dette kan det også være nødvendig å angi egne nøkler for
spesielle SSH-servere.  Dette gjøres i ´~/.ssh/config´:
´
Host “SERVER”
 IdentityFile ~/.ssh/id_rsa-“SERVER”
´

−− SSH port forwarding
Det er to typer SSH forwarding:
´
ssh -L port:host:hostport remote-host ¡# localhost:port -> remote-host -> host:hostport
ssh -R port:host:hostport remote-host ¡# remote-host:port -> localhost -> host:hostport
´
´-L´-varianten betyr at ssh vil lytte på port nummer ´port´
på maskinen der kommandoen utføres.  Når noen connecter til denne
porten vil det videresendes til ´remote-host´, som videre
gjør connect til adresse ´host:hostport´.  Dette kan brukes
til å få tilgang til maskin ´host´ som egentlig ikke er tilgjengelig
fra der ssh kjøres, ved å gå via ´remote-host´.

´-R´-varianten er som ´-L´, men går andre veien.  Det betyr
at ssh setter opp en listening socket på port nummer ´port´ på
´remote-host´.  Når noen connecter til ´remote-host:port´,
så vil dette bli videresendt til maskinen der du utførte ´ssh
-R´, som igjen vil connecte til ´host:hostport´ og sende
alle videre data i denne forbindelsen dit.  Dette kan brukes
til å lage en vei gjennom en firewall.  Hvis du f.eks. har en
firewall som blokker alle innkommende forbindelser til maskinen
du kjørte ´ssh -R´ på, så vil dette kunne omgå det ved å
initiere forbindelsen fra innsiden av det avgrensede nettet.

−− Fetchmail via SSH-tunnel
La ´~/.fetchmailrc´ inneholde følgende:
´
poll “SERVER” via localhost port “LOCAL-PORT” username “USERNAME” password "“PASSWD”"
  preconnect "ssh -fL “LOCAL-PORT”:“SERVER”:110 “SERVER” sleep 20"
´

−− Fetchmail til å ta backup av IMAP
Installer procmail i tillegg til fetchmail (for å få ´formail´). Legg inn login
info for IMAP-serveren i ´~/.netrc´:
´
machine “HOSTNAME” login “USERNAME” password “PASSWORD”
´
Deretter kan meldinger lastes ned med følgende kommando:
´
fetchmail --username “USERNAME” --keep --fetchall --ssl --mda 'formail -c >> “MBOX-DESTINATION-PATH”' --folder “IMAP-FOLDER” “HOSTNAME”
´
For å liste IMAP-mapper, gjør
´
curl --netrc --url "imap://“HOSTNAME”/"
´

− Exim
−− Korrekt avsender
Fjern først ´“Sender:”´ ved å sette
´
local_from_check = false
´
først i ´exim.conf´.  Under ´begin rewrite´ legger man så noe slikt:
´
*@*.venod.com ${lookup{$1}lsearch{/etc/email-addresses}{$value}fail} Ff
´
Dette vil instruere Exim til å omskrive ´From´  basert på
´/etc/email-addresses´ dersom avsenderadresse matcher ´*@*.venod.com´.
´email-addresses´ skal inneholde linjer på formen:
´
hakonrk: haakon.riiser@fys.uio.no
´
Første kolonne er lokalt brukernavn, og andre kolonne er den faktiske
epost-adressen for denne brukeren.

−− Bruk sammen med fetchmail
Fetchmail leverer til ´“USERNAME”@localhost´, så det er svært viktig at Exim
vet at ´localhost´-domenet er en lokal adresse.  Dette gjøres ved å editere
Exims konfigurasjonsfil slik at ´domainlist local_domains´ er satt som følger:
´
domainlist local_domains = @ : localhost
´

−− Relaying på LAN
For å la en Exim-server gjøre relaying på LAN (f.eks. 10.0.0.0/24),
editer Exims konfigurasjonsfil slik at ´hostlist relay_from_hosts´ er
satt som følger:
´
hostlist relay_from_hosts = 127.0.0.1 : 10.0.0.0/24
´

−− Bruk med procmail
For å la Exim levere til procmail legger man følgende i ´~/.forward´:
´
| /usr/bin/formail -A 'X-Local: yes' -ds /usr/bin/procmail
´
Her brukes først ´formail´ til å legge til headeren ´X-Local: yes´,
og sender så meldingen videre til procmail.  Procmail kan så sjekke
´X-Local´ for å se om det er en lokal melding, og umiddelbart levere
den riktig.


−− Fikse slik at root kan ta imot post
Editér ´/etc/aliases´ og sett slik at root og andre relevante systembrukere
får posten sin levert til en ekte bruker.


−− Bruk av smarthost med SMTP AUTH og TLS
For å sette opp smarthost (eksempelvis smtp.uio.no) med SMTP AUTH og TLS,
editer Exims konfigurasjonsfil og rett under ´begin routers´ legger man
´
smarthost:
  driver = manualroute
  transport = remote_smtp
  route_list = !+local_domains smtp.uio.no
´
Under ´begin transports´, pass på at det finnes en ´remote_smtp´ regel
som ser slik ut:
´
remote_smtp:
  driver = smtp
  hosts_try_auth = smtp.uio.no
  hosts_require_tls = smtp.uio.no
  port = 587
´
Rett under ´begin authenticators´ skal man ha følgende:
´
fixed_plain:
  driver = plaintext
  public_name = PLAIN
  client_send = ^“USERNAME”^“PASSWORD”
´

−− Flushe køen
Skriv ´exim -qff´ for å prøve å sende ut alle meldinger i køen.

− GPG
−− Signering av filer
For å lage en ASCII signatur av ´foo´, gjør
´
gpg --armor --detach-sig --output “foo.asc” --local-user “SIGNING-KEY-EMAIL-ADDR” “foo”
´

−− Verifisering av filer
For å verifisere at ´foo´ ved hjelp av ´foo.asc´, gjør
´
gpg --verify “foo.asc”
´

− Samba
−− Oppsett med brukere
La ´/etc/samba/smb.conf´ inneholde ´security = user´ (eller ingenting,
da dette er default setting).  Legg til ny bruker med ´smbpasswd´:
´
smbpasswd -a “USERNAME”
´

−− Mounting av Samba-shares
Mount med kommandoen
´
smbmount //“SERVER”/“SHARENAME MOUNT-POINT” -o username=“USERNAME”,password=“PASSWORD”,rw,fmask=644
´
´/usr/bin/smbmnt´ og ´/usr/bin/smbumount´ må være SUID root for
å la vanlige brukere mounte.

−− WINS for navneoppslag
Legg inn ´/lib/libnss_wins.so.2´ og la ´/etc/nsswitch.conf´ inneholde
´
hosts: files dns wins
´
For å gjøre caching av navn, i stedet for
broadcast-oppslag hver eneste gang, putt ´wins support = yes´ i
´global´-seksjonen i ´smb.conf´.

− Red Hat og Fedora
−− Nettverksinstallasjon
Adressen som oppgis i nettverksinstallasjonen må inneholde katalogen
´repodata´.  Eks. for Fedora 8:
´
ftp://ftp.uio.no/linux/Fedora/releases/8/Fedora/i386/os/
´

−− Skru av SELinux
På slutten av ´kernel´-linjen i ´/etc/grub.conf´, legg til ´selinux=0´.  Man
kan også legge til ´selinux=0´ når man installerer Linux for å skru det av by
default.  Evt. kan dette gjøres i ´/etc/selinux/config´ ved å sette
´SELINUX=disabled´.  Evt. kan man installere via et kickstart-script og ha
´selinux --disabled´ i scriptet.

For å slette SELinux attributter i filsystemet, gjør
´
find “ROOT” -print0 | xargs -0 setfattr -x security.selinux
´

−− Installere på ReiserFS
Legg til ´selinux=0 reiserfs´ på kernel-kommandolinjen ved installasjon
for å muliggjøre installasjon til ReiserFS.

−− Flytting til annen disk
Opprett partisjoner på ny disk for data og swap.  Boot fra rescue
CD e.l., og kopier over alle data til ny disk.  Sett opp swap med
´mkswap “DEVICE”´.  Oppdater UUID på alle partisjoner i
´/etc/fstab´ og ´/etc/grub.conf´.  UUID kan leses ut med
´blkid /dev/“PARTITION”´, ´/lib/udev/vol_id /dev/“PARTITION”´,
eller ´sudo dumpe2fs -h /dev/“PARTISJON” | grep UUID´ for ext2/ext3.
(Hvis det ble brukt labels i stedet for UUID, så sett opp labels
på partisjonene som matcher det gamle oppsettet med
´/sbin/e2label “PARTITION-DEVICE” “LABEL”´.)

Reinstaller grub med:
´
cp -a /dev/null /dev/sd“X”* “MOUNT-POINT”/dev
chroot “MOUNT-POINT”
grub-install /dev/sd“X”
´
der ´“MOUNT-POINT”´ er katalogen der den nye root-partisjonen
er mountet, og ´/dev/sd“X”´ er disk (ikke partisjon) device'et for
den nye disken.  Helt til slutt må også initrd settes opp på nytt.
Det skal funke å gjøre
´
mount “NEW-BOOT-PARTITION” “MOUNT-POINT”/boot
chroot “MOUNT-POINT”
mv /boot/initrd-“KERNEL-VERSION”.img{,.orig}
mkinitrd /boot/initrd-“KERNEL-VERSION”.img “KERNEL-VERSION”
´
der ´“NEW-BOOT-PARTITION”´ er ´/boot´ på den nye disken, og
´“KERNEL-VERSION”´ er ´uname -r´ fra OS-et som flyttes.
Hvis ikke mkinitrd funker, så kan man modifisere den gamle direkte:
´
mkdir tmp-initrd
cd tmp-initrd
zcat “OLD-INITRD”.img | cpio -ivd
¡# Update the labels/UUID values in the init script
find . | cpio -co >“NEW-INITRD”.img
´

−− Listing av pakker m/størrelse
Følgende kommando lister all installerte pakker og installert størrelse,
sortert slik at den siste pakken er den største, og formatert slik at
alle tallene kommer i samme kolonne:
´
rpm -qa --qf '%{name} %{size}\n' | sort -nk2 | column -t
´

−− Listing av pakker m/installasjonsdato
Følgende kommando lister all installerte pakker, med Unix-timestamp
i første kolonne, lesbar dato etter det, og så pakkenavn:
´
rpm -qa --qf '%{installtime} (%{installtime:date}) %{name}\n' |
 sed 's#\(.*\) #\1/#' |
 column -s / -t
´

−− RPM og GPG-signaturer
For at RPM skal kunne verifisere GPG-signaturene i RPM-pakkene, så er det
nødvendig å importere de passende GPG-nøklene i RPM.  For Fedora ligger
filene i ´/usr/share/doc/fedora-release-?/RPM-GPG-KEY*´.  I denne
katalogen ligger mange forskjellige nøkler, så for å finne den riktige
filen er det nødvendig å vise dens nøkkel-ID med kommandoen
´
gpg -n --import “KEYFILE”
´
For at nøkkelen skal kunne brukes av RPM, så er det nødvendig å importere
den med rpm:
´
rpm --import “KEYFILE”
´
RPM har ingen mekanisme for å detektere om samme nøkkel er importert allerede,
så man risikerer å få den importert mange ganger.  Skjekk dette med
´
rpm -qa gpg-pubkey | sort | uniq -c
´
Dupliserte nøkler må slettes med
´
rpm -e --allmatches gpg-pubkey-“XXXXXXXX”-“YYYYYYYY”
´

−− Spesifisering av mirrors i yum
Editér ´.repo´-filene under ´/etc/yum.repos.d/´ og sett
´
baseurl=“URL1”
        “URL2”
        “...”
failovermethod=priority
´
´failovermethod=priority´ vil si at ´“URL1”´ prøves først, deretter
´“URL2”´, osv.

−− Korrigering av bold og underlined i XTerm
For å få ekte bold og underlined tekst i XTerm, editér
´/usr/X11R6/lib/X11/app-defaults/XTerm´ og fiks linjene
´
!*VT100*colorULMode: on
!*VT100*underLine: off

! Uncomment this to use color for the bold attribute
!*VT100*colorBDMode: on
´
For å forhindre at XTerm-tittelen ser ut som et shell-prompt, unset
bash-variabelen ´PROMPT_COMMAND´, som er satt i ´/etc/bashrc´.

−− Fikse treg scrolling i XTerm ved bruk av radeon driver
Opprett ´/etc/X11/xorg.conf.d/02-radeon.conf´:
´
Section "Device"
    Identifier "vga"
    Driver "radeon"
    Option "ColorTiling" "false"
    Option "ColorTiling2D" "false"
EndSection
´

−− Fjerne PID fra core-filer
De følgende to kommandoene er ekvivalente:
´
echo 0 >/proc/sys/kernel/core_uses_pid
/sbin/sysctl -w kernel.core_uses_pid=0
´
Disse blir på Fedora og Red Hat satt via ´/etc/sysctl.conf´.

−− Subpixel AA + bytecode-hinter i FreeType
Last ned SRPM-filen til FreeType, og gjør ´rpm -ivh
“SRPM”´.  Dette vil pakke ut filen i ´/usr/src/redhat´,
eller i ´%_topdir´ definert i ´~/.rpmmacros´. Bygg pakken
med
´
rpmbuild --with bytecode_interpreter --with subpixel_rendering --rebuild -bp “PATH-TO-SRC-RPM”
´
For å bygge 32-bit versjonen på et 64-bit system, gjør
´
/usr/bin/mock -r “SYSTEM” --with bytecode_interpreter --with subpixel_rendering --rebuild “PATH-TO-SRC-RPM”
´
der ´“SYSTEM”´ er basename av navnene i ´/etc/mock/*.cfg´ (dvs. minus ´/etc/mock/´ prefix og ´.cfg´ suffix).
Man kan rydde opp etterpå med
´
/usr/bin/mock -r “SYSTEM” --scrub=all
´

−− RPM som vanlig bruker
Lag katalogstrukturen for ´rpmbuild´:
´
mkdir -p /foo/rpmbuild/{BUILD,SOURCES,SPECS,SRPMS,RPMS/i386}
´
Sett opp ´rpm´ til å bruke ´/foo/rpmbuild´:
´
echo "%_topdir /foo/rpmbuild" >~/.rpmmacros
´
Det er også mulig å overstyre ´~/.rpmmacros´ ved å bruke argumentet
´--define "_topdir “DIRECTORY”"´ på ´rpm´ og ´rpmbuild´.

−− Når rpm henger
Slett ´rpm´s lock-filer, dvs. de som begynner på ´__db´ i
´/var/run/rpm´ eller ´/var/lib/rpm´.  Utfør deretter kommandoen
´rpm --rebuilddb´ for å regenerere filene.

−− Ekstra RPM repositories
Pakker som pga. lisens, patent, eller andre grunner ikke kan
aksepteres av Fedora kan ofte fås hos «Livna − http://rpm.livna.org/rlowiki/».
Legg inn deres GPG-nøkkel med
´rpm --import http://rpm.livna.org/RPM-LIVNA-GPG-KEY´ før
repo'et tas i bruk.

− GNU Arch (tla)
−− Nytt arkiv
For å lage ett nytt arkiv ved navn ´foo@bar--2005´ i katalogen
´/qux/2005´, pass først på at katalogen ´/qux´ eksisterer, og at
underkatalogen ´2005´ ‗ikke‗ eksisterer.  Opprett arkivet
med kommandoen
´
tla make-archive -l foo@bar--2005 /qux/2005
´
(´-l´ betyr at tla skal vedlikeholde ´.listing´-filer automatisk;
kun nødvendig for arkiv som skal aksesseres over HTTP.)
Merk at katalogen må være absolutt; det ville ikke virke om man
først gikk inn i ´/qux´ og så prøvde å angi katalogen som ´2005´.
Arkivet blir automatisk registrert som ´foo@bar--2005´, som kan
bekreftes med ´tla archives´.  Arkivet kan gjøres til default med
kommandoen
´
tla my-default-archive foo@bar--2005
´

−− Nytt prosjekt
Dersom man ønsker å legge inn prosjektet “zot”, som
er lagret i ´~/src/zot´, i et eksisterende arkiv ´foo@bar--2005´,
så gjør man følgende:
´
cd ~/src/zot
tla init-tree foo@bar--2005/zot--main--0
tla add-id “fil1 fil2 ...”
tla import -S
´
Dersom ´foo@bar--2005´ er default archive, så trenger man ikke
angi dette i ´init-tree´-kommandoen.

− Python

−− Virtuell installasjon
En virtuell installasjon av Python gjør det mulig for en vanlig bruker å
administrere sine egne moduler o.l.  uten å måtte sette ´PYTHONPATH´.
Dette kan settes opp som følgende:
´
pythonprefix=“/local/opt/python”
mkdir -p $pythonprefix
wget -P /tmp http://peak.telecommunity.com/dist/virtual-python.py
python /tmp/virtual-python.py --prefix=$pythonprefix
´
For å bruke den virtuelle installasjonen må ´$pythonprefix/bin´ legges til
´PATH´, før alle andre ´python´ executables.  Når alt dette er gjort er det
lurt å installere ´setuptools´, da dette inkluderer ´easy_install´ som er
Pythons svar på CPAN.  Installasjonen er triviell:
´
wget -P /tmp http://peak.telecommunity.com/dist/ez_setup.py
python /tmp/ez_setup.py
´

− UiO

−− Bruk av UiOs backupsystem
For å gjenopprette katalog ´~/foo´ i den tilstand den var 10. juli
2002, kl. 13:00, så kan man bruke følgende kommando (fra tid.uio.no):
´
/local/tsm/bin/dsmc restore -subdir=yes -pitd=7/10/2002 -pitt=13:00:00 ~/foo
´
Det skal også være mulig å be om det som sist var lagret ved å bytte ut ´-pitd´ og
´-pitt´ med ´-latest´.

−− Korrigering av default email på UiO
Start opp ´bofh´ og gjør noe à la følgende session:
´
jbofh> ·person list_user_priorities hakonrk
   Uname Priority Affiliation
 hakonrk        1 STUDENT@150000 (Mat.nat. fakultet)
 hakonrk        6 STUDENT@150400 (Fysisk institutt)

jbofh> ·person set_user_priority hakonrk 6 1
OK
´
Man kan deretter verifisere at operasjonen var vellykket ved
å se på output fra ´email info hakonrk´.

− TeX / LaTeX

−− Korrekt spacing i LaTeXs eqnarray
Gjør ´\setlength{\arraycolsep}{2pt}´.

−− TeX Live

−−− Installasjon

Gå til «Tex Live −  http://www.tug.org/texlive/acquire-netinstall.html»
og last ned «install-tl-unx.tar.gz −  http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz».
Installer ´perl-Tk´ for å kjøre GUI-versjonen av installasjonsprogrammet.
´
./install-tl -gui=perltk
´
Alternativt, text-only installer:
´
./install-tl -gui=text
´

− Audio/video encoding

−− Splitting av MKV/Matroska filmer
For å splitte en MKV-film til under 4 GB, installer ´mkvtoolnix´
og gjør
´
mkvmerge --split 4050m -o “OUTPUT”.mkv “INPUT”.mkv
´

−− Enkoding med ffmpeg
Enkoding med ffmpeg har følgende syntaks:
´
ffmpeg “INPUT-OPTIONS” -i “INPUT-FILE” “OUTPUT-OPTIONS” “OUTPUT-FILE”
´
Rekkefølgende på ´“INPUT-OPTIONS”´ og ´“OUTPUT-OPTIONS”´ er
‗ekstremt‗ viktig!  Eks. for å kode noe til 1 Mbps H.264 med 128 kbps MP3-lyd:
´
ffmpeg -i “INPUT-FILE” -c:a libmp3lame -b:a 128k -c:v libx264 -b:v 1000k “OUTPUT-FILE”
´
Formatet på ´“OUTPUT-FILE”´ blir satt av extension.  For å liste forskjellige
formater for a/v codec og containerstrøm, gjør ´ffmpeg -formats´.

−− Måle varighet med ffmpeg
´
ffmpeg -v error -show_entries format=duration “INPUT-VIDEO” -of csv
´

−− Kopiere lyd fra INPUT1 og video fra INPUT2 med ffmpeg
´
ffmpeg -i “INPUT1” -i “INPUT2” -map 0:a -map 1:v -c:v copy -c:a copy “OUTPUT”
´

−− Normalisere volumn under ffmpeg encoding
´
ffmpeg -i “INPUT” -c:v copy -c:a libmp3lame -filter:a loudnorm “OUTPUT”
´

−− FFmpeg pipelining
For å sende rå YUV-frames via pipe til x264:
´
ffmpeg -i “INPUT-VIDEO” -an -f rawvideo - |
  x264 --threads auto -B “BITRATE” --fps “FPS” -o “OUTPUT-VIDEO” - “WIDTH”x“HEIGHT”
´
For å sende YUV-frames i YUV4MPEG-format til x264:
´
ffmpeg -i “INPUT-VIDEO” -an -f yuv4mpegpipe - |
  x264 -B “BITRATE” -o “H264-OUTPUT” --demuxer y4m -
´
For å sende lyd i WAV-format til faac:
´
ffmpeg -i “INPUT-STREAM” -f wav -vn - |
  faac [“QUALITY-OPTIONS”] -o “AAC-OUTPUT” -
´
For å sende lyd i rå PCM-data:
´
ffmpeg -i “INPUT-VIDEO” -f s16le -vn - |
faac -X -P -C “CHANNELS” -R “RATE” -o “AAC-OUTPUT” “PCM-INPUT”
´

−− Bruke FFmpeg til å segmentere video
´
¡# Til MP4:
ffmpeg -i INPUT -codec copy -f segment -segment_time 1 -segment_format mp4 /tmp/out%05d.mp4

¡# Til HLS:
ffmpeg -i INPUT -codec copy -bsf h264_mp4toannexb -f segment -segment_time 1 -segment_list /tmp/out.m3u8 -segment_format mpeg2ts /tmp/out%05d.ts
´

−− Dumping av rå PCM-lyd med FFmpeg eller mplayer
´
¡# Alternativ 1: med FFmpeg
ffmpeg -i “INPUT-STREAM” -f s16le -vn -
´
Kan teste å spille lyden med
´
aplay -f S16_LE -c “CHANNELS” -r “RATE” “PCMFILE”
´

−− Subtitles brent inn i bildet vha FFmpeg m/libass
Installer FFmpeg med libass for brenne inn subtitles i bildet.  Transkoding av
video gjøres slik:

´
ffmpeg -i “INPUT-VIDEO” \
  -c:a ac3 -b:a 448k \
  -c:v libx264 -crf 16 \
  -vf subtitles=SRT-FILE \
  “OUTPUT-VIDEO”.mp4
´

− Emulatorer

−− QEMU
´
¡# New image.
qemu-img create -f qcow2 IMAGE-FILE 3G

¡# Copy-on-write derived image.
qemu-img create -f qcow2 -b BASE-IMAGE DERIVED-IMAGE

¡# Reduce size of existing image, preserve backing file.
qemu-img convert -O qcow2 -o backing_file=“BACKING-FILE” “IN-IMAGE” “OUT-IMAGE”

¡# Install Windows.
qemu-system-i386 -enable-kvm -m 512 -hda QEMU-IMAGE -cdrom WINDOWS-ISO -boot d
´

Starte Windows qemu image:
´
#!/bin/sh

iface=$(/sbin/ip route get 1.1.1.1 | awk 'BEGIN{RS="\\s+"}/^dev$/{getline;print}')
max_concurrent_threads=$(awk '/^processor/{++n}END{print n}' /proc/cpuinfo)

image=win10.derived.qcow2

qemu_args=()
qemu_args+=(-enable-kvm)
qemu_args+=(-m 8192)
qemu_args+=(-cpu host)
qemu_args+=(-smp $max_concurrent_threads)
qemu_args+=(-hda $image)
#qemu_args+=(-device virtio-scsi-pci,id=scsi0 -drive file=$image,if=none,format=qcow2,id=cDrive -device virtio-scsi-pci,id=scsi -device scsi-hd,drive=cDrive)
qemu_args+=(-monitor stdio)
qemu_args+=(-device qemu-xhci,id=xhci)
qemu_args+=(-device usb-tablet,bus=xhci.0)
qemu_args+=(-spice port=5924,disable-ticketing)
qemu_args+=(-device virtio-serial)
qemu_args+=(-chardev spicevmc,id=vdagent,name=vdagent)
qemu_args+=(-device virtserialport,chardev=vdagent,name=com.redhat.spice.0)
qemu_args+=(-vga qxl)
qemu_args+=(-netdev user,id=$iface,net=192.168.76.0/24,dhcpstart=192.168.76.9 -net nic,model=rtl8139 -net user,smb=/crypt/tmp/qemu)
#qemu_args+=(-cdrom foobar.iso)

qemu-system-x86_64 "${qemu_args[@]}"
´

For shared folders, opprett ´/etc/samba/smb.conf´ med følgende innhold:
´
[qemu]
	path = /crypt/tmp/qemu
	browseable = yes
	force user=hakonrk
	guest ok = true
	write list = hakonrk
	acl allow execute always = true
	create mask = 0664
	directory mask = 0775
´

Etter VM'en er startet, så må man koble til display med ´spicy --title 'Windows' localhost -p 5924´.

For å gjøre slik at localhost:9000 går til localhost:22 i VM'en, bytt
´-net´ argumentet til:
´
-net user,hostfwd=tcp::9000-:22 -net nic
´
Hvis det ikke er ønskelig å åpne et X11-vindu, men i stedet bruke
VNC, legg til:
´
-vnc :5
´
Klienter kan da koble til med ´vncviewer “HOSTNAME”:5´.

−− Mounting av qcow2 imagefiler
Mount:
´
sudo modprobe nbd max_part=8
sudo qemu-nbd --connect=/dev/nbd0 win10.derived.qcow2

¡# Velg riktig partisjon fra det som vises her:
sudo parted -l /dev/nbd0

sudo mount /dev/nbd0p“N” /mnt
´

Unmount:
´
sudo umount /mnt
sudo qemu-nbd --disconnect /dev/nbd0
sudo modprobe -r nbd
´

−− Teste PXE-boot med qemu
´
qemu-system-x86_64 -enable-kvm -m “4096” -net nic -net user,tftp=“/path/to/tftp-root”,bootfile=“pxelinux.0” -hda “foo.img” -boot n
´

−− C64 (vice)
Start et spill med følgende kommando:
´
x64 -joydev1 0 -logfile /dev/null “DISK/TAPE/CART”
´
Når spillet starter, høyreklikk i vinduet og velg
‗Joystick settings | Joystick device in port 1 | Analog Joystick 0‗.
Trykk ´Alt-J´ for å få joysticken til å virke.  Video mode settes via
‗VIC II‗-menyen; bruk ´Alt-D´ for å gå til fullscreen.

− Lyd

−− Fikse pulseaudio
Dersom pulseaudio henger under X, editer ´/etc/pulse/default.pa´ og
gjør om linjen
´
load-module module-hal-detect
´
til
´
load-module module-hal-detect tsched=0
´

−− Mixeroppsett i ALSA
Mixeren kan stilles med programmet ´amixer´.  Eksempelvis vil
følgende sette hhv. Master- og PCM-volum til 71 %, samtidig som
mute skrus av:
´
amixer -q set Master 71% unmute
amixer -q set PCM 71% unmute
´
Hele mixeroppsettet kan lagres/gjenopprettes med ´alsactl´:
´
alsactl store [-f “STATE-FILE”]
alsactl restore [-f “STATE-FILE”]
´
Hvis ikke ´-f “STATE-FILE”´ er angitt, så vil programmet bruke
´/etc/asound.state´.

−− Oppsett for lydopptak
Når ´alsamixer´ først startes vil den være i Playback-modus, så
trykk ´Tab´ for å veksle mellom Playback/Capture/All.  Evt. trykk
´F5´ for å gå rett til Capture.  Pass på å sette volum og unmute
på den relevante input-kanalen, og sett også input-source til å
matche dette.  Volumet på kanalen ´Capture´ må også settes på, og
det må trykkes ´Space´ på denne slik at opptak skrus på.  Det vil
komme noe rød tekst under volumkontrollen som viser at opptak er
på.  Dette kan også settes med amixer:
´
amixer -q set Capture 50% cap
´

− Web server-oppsett, PHP, SQL, etc.

−− Oppsett av alternativ Apache share
For å gjøre slik at ´http://localhost/www/´ viser alt innhold i ´/local/www´, og med ingen
restriksjoner på symlinker, opprett følgende ´/etc/httpd/conf.d/local.conf´:
´
Alias /www /local/www
<Directory "/local/www">
  Options Indexes FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all
  Require all granted
</Directory>
´

−− Oppsett av DAV med SSL på Apache
Lag først nøkler:
´
openssl req -new -x509 -keyout /etc/httpd/conf/server.key -out /etc/httpd/conf/server.crt
´
Disse krever passphrase, som gjør at httpd trenger dette skrevet inn når den starter.
For å fjerne passphrase, gjør:
´
mv /etc/httpd/conf/server.key /etc/httpd/conf/server.key-with-passphrase
openssl rsa -in /etc/httpd/conf/server.key-with-passphrase -out /etc/httpd/conf/server.key
´
I ´/etc/httpd/conf.d/ssl.conf´ skal det nå stå:
´
SSLCertificateFile /etc/httpd/conf/server.crt
SSLCertificateKeyFile /etc/httpd/conf/server.key
´
Lag så en passord-fil for DAV-brukere:
´
htpasswd -c /etc/httpd/conf/webdav-passwd “USERNAME”
´
Merk at ´-c´ får htpasswd til å overskrive eksisterende filer.  Dropp ´-c´
hvis det allerede eksisterer en passord-fil hvor nye brukere skal legges til.

−− Backup av MySQL-database
For å dumpe en SQL-database til fil, gjør følgende:
´
mysqldump --add-drop-table -u“USERNAME” -p“PASSWORD” -h“SQL-SERVER” “DBNAME” >“PATH-TO-SQL-DUMP”
´

−− Oppsett av vBulletin
Pakk ut vBulletin i ´/var/www/html´.  Sett så opp MySQL:
´
¡# Opprett root-bruker.
mysqladmin -uroot password “ROOT-MYSQL-PASSWORD”

¡# Opprett vBulletin-bruker.
mysql -uroot -p“ROOT-MYSQL-PASSWORD” mysql
mysql> ·GRANT SELECT,CREATE,INSERT,ALTER,UPDATE,DROP,DELETE,LOCKTABLES,INDEX,REFERENCES,CREATE,TEMPORARY TABLES ON “DBNAME”.* TO “USERNAME”@localhost IDENTIFIED BY '“PASSWORD”'; 
mysql> ·FLUSH PRIVILEGES;

¡# Opprett database.
mysqladmin -u“USERNAME” -p“PASSWORD” create “DBNAME”

¡# Importer siste database-backup.
mysql -u“USERNAME” -p“PASSWORD” “DBNAME” < “LAST-BACKUP”.sql
´
Når alt dette er gjort kan man editere ´config.php´ i vBulletin-katalogen, og sette
´
$config['Database']['dbname'] = '“DBNAME”'
$config['Database']['technicalemail'] = '“ADMIN-EMAIL-ADDRESS”'
$config['MasterServer']['username'] = '“USERNAME”'
$config['MasterServer']['password'] = '“PASSWORD”'
¡# Trenger normalt ikke endres:
$config['MasterServer']['servername'] = 'localhost'
´

−− Generelt om SQL
−−− Velge database
To muligheter: ´mysql -u“USER” -p“PASSWORD” “DBNAME”´ eller
bare ´mysql -u“USER” -p“PASSWORD”´ og så ´use “DBNAME”´
i mysql-promptet.

−−− Beskrive tabell
´
mysql> ·describe “TABLE”;
´

−−− Printe innhold i tabell
´
¡# Utvalgte kolonner
mysql> ·select “COL1”,“COL2”,... from “TABLE”;
¡# Alle kolonner
mysql> ·select * from “TABLE”;
´

−−− Slette rad i tabell
´
mysql> ·delete from “TABLE” where “COL” = "“foo”";
´

−−− Brukere
Brukere i MySQL ligger i databasen ´mysql´ og tabellen ´user´.


− Harddisker, partisjoner, filsystemer, LVM, RAID, etc.

−− Mounte LUKS-kryptert partisjon manuelt
For å mounte:
´
device=“luks-encrypted-partition”
name=“volume-name”
sudo cryptsetup open --type luks $device $name
sudo mount /dev/mapper/$name /mnt
´

For å fjerne dette igjen:
´
sudo umount /mnt
sudo cryptsetup close $name
´

−− Mounte LUKS-kryptert partisjon ved boot
Legg først til LUKS-partisjonen i ´/etc/crypttab´:
´
UUID=$(sudo cryptsetup luksDump /dev/sdb4 | awk '/UUID/{print$2}')
echo luks-$UUID UUID=$UUID none discard | sudo tee -a /etc/crypttab
´
Deretter kan ´/dev/mapper/luks-$UUID´ mountes i ´/etc/fstab´, som en
vanlig ukryptert partisjon.

−− eCryptfs med passord fra login
For å få /foo/private ferdig mountet med ecryptfs ved login
uten å måtte skrive mount passphrase, start med å sette opp ecryptfs
mount:
´
mount -t ecryptfs /bar/private.crypt /foo/private
´
Svar på alle spørsmålene som kommer opp - valg av passphrase er helt
fritt, man trenger ikke velge samme som login-passord.  Når ´/foo/private´
er ferdig mountet gjør man:
´
grep ecryptfs /etc/mtab >>/etc/fstab
´
Rediger ´/etc/fstab´ og legg til ´user,noauto,exec´ på mount options for
linjen som nettopp ble lagt til.  Opprett deretter ´$HOME/.ecryptfs/´ for
brukeren som skal ha ´/foo/private´ automountet.  I denne katalogen
skal man først lage en tom ´auto-mount´:
´
touch $HOME/.ecryptfs/auto-mount
´
I tillegg må man lage ´wrapped-passphrase´ med følgende metode:
´
ecryptfs-wrap-passphrase $HOME/.ecryptfs/wrapped-passphrase “MOUNT-PASSPHRASE” “LOGIN-PASSWORD”
´
Her er ´“MOUNT-PASSPHRASE”´ samme passphrase som ble brukt i først
mount-kommandoen ovenfor, mens ´“LOGIN-PASSWORD”´ er det vanlige passordet
brukeren logger inn med.  NB: Pass på at root kan lese ´wrapped-passphrase´!
Helt til slutt gjør man (som root):
´
authconfig --enableecryptfs --updateall
´
Ved login skal nå mount passphrase automatisk settes inn i keyring. Dette kan
verifiseres ved å bruke ´keyctl´, f.eks:
´
$ ·keyctl list @u
2 keys in keyring:
1052219576: --alswrv   500     0 user: 151c72727ff0c21f
386276186: --alswrv   500     0 user: ee0581f60fdc6272
´
rett etter brukeren logger inn.  NB: Hvis brukeren bytter passord,
så vil dette IKKE virke, pga. at ´wrapped-passphrase´ vil være
kryptert med et annet passord enn det brukeren logger inn med. Hvis
nøkkelringen ikke er tom, så skal det nå virke å mounte med
´
mount -i /foo/private
´
uten å måtte oppgi passord.  Dersom det ikke virker automatisk på login kan
man teste ´wrapped-passphrase´ med:
´
$ ·echo -n “LOGIN-PASSWORD” | ecryptfs-insert-wrapped-passphrase-into-keyring $HOME/.ecryptfs/wrapped-passphrase -
¡'keyctl list @u' should now show the key's signature.
$ ·echo -n “LOGIN-PASSWORD” | ecryptfs-unwrap-passphrase $HOME/.ecryptfs/wrapped-passphrase
¡Outputs “MOUNT-PASSWORD” in plaintext
´

−− eCryptfs på systemer der authconfig ikke setter det opp
Som et alternativ til ´authconfig --enableecryptfs --updateall´ kan man prøve
følgende patch på /etc/pam.d:
´
diff -ruN etc/pam.d/login /etc/pam.d/login
--- etc/pam.d/login	2011-05-25 19:04:08.000000000 +0200
+++ /etc/pam.d/login	2011-11-21 12:43:50.179687805 +0100
@@ -1,6 +1,7 @@
 #%PAM-1.0
 auth [user_unknown=ignore success=ok ignore=ignore default=bad] pam_securetty.so
·-auth       include      system-auth
¡+auth       substack     system-auth
¡+auth       include      postlogin
 account    required     pam_nologin.so
 account    include      system-auth
 password   include      system-auth
@@ -13,4 +14,5 @@
 session    required     pam_namespace.so
 session    optional     pam_keyinit.so force revoke
 session    include      system-auth
¡+session    include      postlogin
 -session   optional     pam_ck_connector.so
diff -ruN etc/pam.d/passwd /etc/pam.d/passwd
--- etc/pam.d/passwd	2010-11-23 23:48:35.000000000 +0100
+++ /etc/pam.d/passwd	2011-11-21 00:20:25.232977654 +0100
@@ -3,3 +3,4 @@
 account    include	system-auth
 password   substack	system-auth
 -password   optional	pam_gnome_keyring.so
¡+password   substack     postlogin
diff -ruN etc/pam.d/postlogin /etc/pam.d/postlogin
--- etc/pam.d/postlogin	1970-01-01 01:00:00.000000000 +0100
+++ /etc/pam.d/postlogin	2011-11-21 00:21:31.607435436 +0100
@@ -0,0 +1,3 @@
¡+auth        optional      pam_ecryptfs.so unwrap
¡+password    optional      pam_ecryptfs.so unwrap
¡+session     optional      pam_ecryptfs.so unwrap
diff -ruN etc/pam.d/remote /etc/pam.d/remote
--- etc/pam.d/remote	2011-05-25 19:04:08.000000000 +0200
+++ /etc/pam.d/remote	2011-11-21 12:45:30.386363611 +0100
@@ -1,6 +1,7 @@
 #%PAM-1.0
 auth       required     pam_securetty.so
·-auth       include      password-auth
¡+auth       substack     password-auth
¡+auth       include      postlogin
 account    required     pam_nologin.so
 account    include      password-auth
 password   include      password-auth
´

−− IDE/ATA DMA
For å få maks ytelse av disken, legg følgende i ´/etc/rc.d/rc.S´:
´
/usr/sbin/hdparm -q -c3 -m16 -d1 -u1 /dev/hda
´
Forklaring: ´-q´ skrur av output, ´-c3´ velger 32-bit IDE I/O med sync,
´-m16´ setter sector count til 16 for multiple sector I/O (IDE Block Mode),
´-d1´ skrur på DMA, og ´-u1´ lar disken unmask'e interrupts under
interrupt prosessering.  For å se grenser for hva som kan skrus på, se
´/proc/ide/hda/settings´ og ´hdparm -i /dev/hda´.

−− LVM

−−− Oppsett
Det følgende er et eksempel som viser hvordan man setter opp to disker
(´/dev/sda´ og ´/dev/sdb´) i LVM med striping (64 KiB stripe size).
Start med å opprette en partisjon på hver disk som dekker hele disken.
Gjør så:
´
pvcreate /dev/sda1 /dev/sdb1
vgcreate “vgname” /dev/sda1 /dev/sdb1
lvcreate -n “lv00” -i 2 -I 64 -l '100%FREE' “vgname”
´
Dersom ´pvcreate´ (eller noe annet) gir feilmeldinger om at disken
er i bruk, og den ikke er mountet, så er trolig feilen at software
RAID driveren har stjålet disken.  Det vil evt. stå i ´/proc/mdstat´.
Dette kan fikses med ´mdadm --stop “MD-DEVICE”´.

Dersom filsystemet på volumet skal være ext2 eller ext3, pass på
å spesifisere stride.  Hvis f.eks. filsystemets block size
er 4 KiB og LVM stripe size er 64 KiB, så er stride lik 64/4 = 16:
´
mkfs.ext3 -b 4096 -E stride=16 /dev/“vgname”/“lv00”
´
Dersom man har glemt stripe size på volumet, kan den vises med
´
lvs --units b -o stripesize /dev/“vgname”/“lv00”
´

−−− Gjenoppretting av tidligere oppsett
For å hente fram og sette opp et tidligere LVM-oppsett, kjør ´vgscan´ for å
finne gruppene, og deretter
´
vgchange -ay “VG-NAME”
´

−−− Legge til ekstra partisjon
For å legge til ´/dev/sdq3´ i volume group ´“VG-NAME”´, gjør:
´
pvcreate /dev/sdq3
vgextend “VG-NAME” /dev/sdq3
lvextend -l +100%Free /dev/“VG-NAME”/“LV-NAME”
resize2fs /dev/“VG-NAME”/“LV-NAME”
´

−−− Krympe volum
Reduser filsystemet til minimum:
´
resize2fs -M /dev/“VOLGROUP”/“LVNAME”
´
Reduser volum til ønsket størrelse, men “IKKE” mindre enn størrelsen
som filsystemet ble satt til ovenfor:
´
lvresize -l “NUM_EXTENTS” /dev/“VOLGROUP”/“LVNAME”
´
For å regne ut minimum ´“NUM_EXTENTS”´, gjør:
´
block_count=$(dumpe2fs -h /dev/“VOLGROUP”/“LVNAME” 2>/dev/null | sed -n 's/^Block count://p')
block_size=$(dumpe2fs -h /dev/“VOLGROUP”/“LVNAME” 2>/dev/null | sed -n 's/^Block size://p')
fs_size=$(echo "$block_size * $block_count" | bc -l)
extent_size=$(vgs --noheadings --nosuffix --units b -o vg_extent_size “VOLGROUP”)
¡# Antall extents som eksakt tilsvarer filsystemets størrelse.
¡# Rund dette opp til nærmeste heltall.
echo $fs_size / $extent_size | bc -l
´
Når volumet er resizet til ønsket antall extents, la filsystemet vokse til
å fylle volumet:
´
resize2fs /dev/“VOLGROUP”/“LVNAME”
´

−− RAID5 med mdadm
Følgende viser et eksempel på hvordan man kan sette
opp et RAID5-array bestående av fire disker, ´/dev/sda´
t.o.m. ´/dev/sdd´.  Begynn med å partisjonere opp diskene
slik at de inneholder én partisjon som dekker hele disken.
Dette fordi man da kan sette partisjonstypen til ‗Linux raid
autodetect‗ (hexverdi ‗fd‗), som gjør at mdadm klarer å
auto-gjenoppbygge RAID-devicet, uten å måtte fortelles hvordan
det skal gjøres.  (Dersom man ‗ikke‗ brukte partisjoner av
denne typen, men hele disker, så måtte man eksplisitt sette opp
arrayen i ´/etc/rc.d/rc.local´ e.l. vha. ´mdadm -A “MD-DEVICE”
“DISK-DEVICES”´.)  Når diskene er ferdig partisjonert, kan man
opprette RAID-arrayet med følgende kommando:
´
mdadm -Cv /dev/md0 -l5 -n4 /dev/sd[a-d]1
´
Operasjonen vil ta lang tid, og status kan lese ut fra ´/proc/mdstat´.
Det kan være ønskelig å lage en ´/etc/mdadm.conf´ som beskriver
RAID-oppsettet.  Det kan gjøres automatisk med
´
mdadm -Ds >/etc/mdadm.conf
´
Dersom filsystemet på RAID-devicet skal være ext2 eller ext3,
pass på å spesifisere RAID-stride.  Hvis f.eks. filsystemets
block size er 4 KiB og RAIDs chunk size (se ´/proc/mdstat´)
er 64 KiB, så er RAID-stride 64/4 = 16:
´
mkfs.ext3 -b 4096 -E stride=16 /dev/md0
´

−− Tuning for SSD
Legg til ´noatime,discard´ på mount options i ´/etc/fstab´ for å fjerne access
time updates og skru på TRIM.  ‗IKKE‗ skru av journaling, for da virker ikke
´discard´ (auto-TRIM).  Trim kan utføres manuelt med
´
fstrim -v /
´
Sett minimalt med swapping ved å legge til i ´/etc/sysctl.conf´:
´
vm.swappiness = 1
´
Bytt også I/O scheduler til ´noop´ ved å lage ´/etc/udev/rules.d/10-schedulers.rules´ med:
´
¡# Set noop scheduler for non-rotating disks.
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="noop"

¡# Set cfq scheduler for rotating disks.
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1", ATTR{queue/scheduler}="cfq"
´
Verifiser at riktig scheduler brukes med
´
cat /sys/block/“DEVICE”/queue/scheduler
´

−− Konvertere ext2 til ext4
Unmount ´“PARTITION”´ og gjør:
´
tune2fs -O extents,uninit_bg,dir_index,has_journal “PARTITION”
fsck.ext4 -y “PARTITION”
´
Husk å oppdatere ´/etc/fstab´ og muligens også ´grub-install “DEVICE” --recheck´.

− PDF-manipulering

−− PDF-manipulering vha qpdf
´
¡# Concatenate all pages:
qpdf --empty --pages “INPUT”... -- “OUTPUT”

¡# Extract pages 1, 3 through 5, and all pages from 10 to the end of the document:
qpdf --empty --pages “INPUT” 1,3-5,10-z -- “OUTPUT”

¡# Extract page 3 from foo.pdf and the last page from bar.pdf:
qpdf --empty --pages foo.pdf 3 bar.pdf z -- “OUTPUT”

¡# Reverse pages:
qpdf --empty --pages “INPUT” z-1 -- “OUTPUT”
´

−− PDF-manipulering vha pdftk
Slå sammen flere PDF-er:
´
pdftk 1.pdf 2.pdf 3.pdf cat output 123.pdf
´
Ekstrahere utvalgte sider fra flere PDF-er inn i étt nytt dokument:
´
pdftk A=one.pdf B=two.pdf cat A1-7 B1-5 A8 output combined.pdf
´
Rotere første siden av en PDF (´“E”´ = 90° med klokken, ´“L”´ =
90° mot klokken, ´“S”´ er 180°):
´
pdftk in.pdf cat 1E 2-end output out.pdf
´

− Protokoll-debugging

−− POP3-debugging
Eksempel på POP3-sesjon:
´
¡# Dersom vanlig ukryptert POP3:
$ ·telnet pop.example.com 110
¡# Dersom POP3S på port 995:
$ ·openssl s_client -crlf -connect pop.example.com:995
¡# Dersom POP3 + STARTTLS:
$ ·openssl s_client -crlf -connect pop.example.com:110 -starttls pop3
´
Når man har koblet til er det følgende likt uansett metode:
´
+OK Hello there.
·user “USERNAME”
+OK Password required.
·pass “PASSWORD”
+OK logged in.
·stat
+OK 3 42734
·list
+OK POP3 clients that break here, they violate STD53.
1 14459
2 25979
3 2296
.
·retr 3
+OK 2296 octets follow.
<...>
.
·dele 3
+OK Deleted.
·quit
+OK Bye-bye.
´
Hvis bruk av POP3S på port 995, koble til med
´openssl s_client -connect pop.example.com:995´.
Dersom bruk av POP3 med STARTTLS, koble til med
´openssl s_client -crlf -connect pop.example.com:110 -starttls pop3´.

−− IMAP-debugging
Eksempel på IMAP-sesjon:
´
¡# Dersom vanlig ukryptert IMAP:
$ ·telnet imap.example.com 143
¡# Dersom IMAPS:
$ ·openssl s_client -crlf -connect imap.example.com:993
´
Når man har koblet til er det følgende likt uansett metode:
´
* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA IDLE ACL ACL2=UNION STARTTLS XMAGICTRASH] Courier-IMAP ready. Copyright 1998-2008 Double Precision, Inc.  See COPYING for distribution information.
·. login “USERNAME” “PASSWORD”
. OK LOGIN Ok.
¡# Lister alle mailbokser
·. list "" *
* LIST (\Unmarked \HasChildren) "." "INBOX"
* LIST (\HasNoChildren) "." "INBOX.Spam"
* LIST (\HasNoChildren) "." "INBOX.Trash"
. OK LIST completed
¡# Velg mailboks med read-write-tilgang (s/SELECT/EXAMINE/ for read-only)
·. select INBOX.Trash
* FLAGS (\Draft \Answered \Flagged \Deleted \Seen \Recent)
* OK [PERMANENTFLAGS (\* \Draft \Answered \Flagged \Deleted \Seen)]
* Limited
* 3 EXISTS
* 0 RECENT
* OK [UIDVALIDITY 1168969248] Ok
* OK [MYRIGHTS "acdilrsw"] ACL
. OK [READ-WRITE] Ok
¡# Dump From/Subject/Date headers fra melding nr 1
·. fetch 1 (body[header.fields (from subject date)])
* 1 FETCH (BODY[HEADER.FIELDS ("from" "subject" "date")] {115}
Date: Wed, 11 Feb 2009 14:43:21 +0200
Subject: hystream rapp
From: Paul Vigmostad <paul.vigmostad@netview.no>

)
. OK FETCH completed.
¡# Hent message body
·. fetch 1 body[text]
* 1 FETCH (BODY[TEXT] {31}
Hi,

Goodbye.

-- 
 Fred Fubar
)
. OK FETCH completed.
¡# Sett "deleted" flagg på alle meldinger [1 .. last]
·. store 1:* flags \Deleted
* 1 FETCH (FLAGS (\Deleted))
* 2 FETCH (FLAGS (\Deleted))
* 3 FETCH (FLAGS (\Deleted))
. OK STORE completed.
¡# Slett alle meldinger markert i forrige skritt
·. expunge
* 1 EXPUNGE
* 1 EXPUNGE
* 1 EXPUNGE
* 0 EXISTS
* 0 RECENT
. OK EXPUNGE completed
·. logout
* BYE Courier-IMAP server shutting down
. OK LOGOUT completed
´

−− SMTP-debugging

−−− Standard ikke-autentisert mail
For å sende mail fra ´my@email.com´ til ´destination@address.com´
ved hjelp av SMTP-serveren ´mail.foo.com´ som lytter på port 25:
´
$ ·telnet mail.foo.com 25
Connected to mail.foo.com
Escape character is '^]'.
220 mail.foo.com ESMTP Exim 4.69 Thu, 08 Apr 2010 16:21:09 +0200
·helo world
250 mail.foo.com Hello world
·mail from:<my@email.com>
250 OK
·rcpt to:<destination@address.com>
250 Accepted
·data
354 Enter message, ending with "." on a line by itself
·Subject: hello, world
·
·hello, world
·.
250 OK id=1Nzsg9-0004UJ-51
·quit
221 mail.foo.com closing connection
´

−−− Autentisert mail
For å sende mail fra ´my-name@my-email-domain.com´ til ´destination@address.com´
ved hjelp av SMTP-serveren ´mail.foo.com´ som lytter på port 587:
´
¡# For ukryptert SMTP:
$ ·telnet mail.foo.com 587
¡# Kryptert med SSL:
$ ·openssl s_client -crlf -connect smtp.example.com:465
¡# Kryptert med STARTTLS:
$ ·openssl s_client -crlf -connect smtp.example.com:587 -starttls smtp
´
Når man har koblet til er det følgende likt uansett metode:
´
220 mail.foo.com ESMTP Exim 4.69 Thu, 08 Apr 2010 16:21:09 +0200
·ehlo my-email-domain.com
250-mail.foom.com Hello bar.example.com [1.2.3.4]
250-SIZE 157286400
250-PIPELINING
250-AUTH PLAIN LOGIN
250-STARTTLS
250 HELP
·auth login
334 VXNlcm5hbWU6
¡<fyll ut resultatet av 'echo -n BRUKERNAVN | base64'>
334 UGFzc3dvcmQ6
¡<fyll ut resultatet av 'echo -n PASSORD | base64'>
235 Authentication succeeded
·mail from:<my-name@my-email-domain.com>
250 OK
·rcpt to:<destination@address.com>
250 Accepted
·data
354 Enter message, ending with "." on a line by itself
·Subject: hello, world
·
·hello, world
·.
250 OK id=1Nzsg9-0004UJ-51
·quit
221 mail.foo.com closing connection
´

− Problemer spesifikke til enkelte maskiner

−− Dell Inspiron 1564

−−− Installasjon
Bruk safe mode pga. at Intel display drivers ikke funker under install.

−−− Display i X.org
Når installasjonen er ferdig må ´nomodeset´ fjernes fra ´grub.conf´,
og ´/etc/X11/xorg.conf´ må inneholde
´
Section "Device"
    Identifier "Videocard0"
    Driver "intel"
EndSection
´

−− Fikse vsync på AMD Radeon
Opprett ´/etc/X11/xorg.conf.d/20-radeon.conf´ med følgende innhold
´
Section "Device"
    Identifier "Radeon"
    Driver "radeon"
    Option "TearFree" "on"
EndSection
´

−− Oppsett av X på laptop med NVIDIA-kort
Legg til ´nouveau.modeset=0´ på kernel command line ved installasjonen. Dette
må gjøres permanent senere ved å legge det inn i ´/etc/default/grub´:
´
--- /etc/default/grub.orig      2018-08-07 06:22:33.000000000 -0400
+++ /etc/default/grub   2018-08-07 06:22:36.496030494 -0400
@@ -6 +6 @@
·-GRUB_CMDLINE_LINUX="rd.luks.uuid=luks-48e28f8b-dfba-4f37-81d7-0a13ccc6c188 selinux=0 rhgb quiet"
¡+GRUB_CMDLINE_LINUX="rd.luks.uuid=luks-48e28f8b-dfba-4f37-81d7-0a13ccc6c188 selinux=0 rhgb quiet nouveau.modeset=0"
´
Kjør deretter ´grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg´ for å
generere nye initrd-filer.

−−− Wireless-nett med Dell 1395 (Broadcom 14e4:4315) og åpen driver
Last ned «Broadcom's firmware − http://downloads.openwrt.org/sources/broadcom-wl-4.178.10.4.tar.bz2»,
og installer denne som følger:
´
tar xjf broadcom-wl-4.178.10.4.tar.bz2
cd broadcom-wl-4.178.10.4/linux
b43-fwcutter -w /lib/firmware wl_apsta.o
´
Etter dette skal kortet være tilgjengelig på ´wlan0´:
´
ifconfig wlan0 up
wpa_supplicant -i wlan0 -c ~/src/misc/etc/wpa_supplicant.conf -B
dhclient wlan0
´

−−− Wireless-nett med Dell 1395 (Broadcom 14e4:4315) og proprietær driver
Skru først av vanlig b43 driver ved å legge inn følgende i
´/etc/modprobe.d/broadcom.conf´:
´
blacklist ssb
blacklist b43
´
Legg deretter inn
«Broadcoms proprietære driver −  http://www.broadcom.com/support/802.11/linux_sta.php».

− Diverse

−− Kernel modules pre-install
Sett argumentet ´INSTALL_MOD_PATH´ til temp-prefikset hvor
´/lib/modules/...´ blir installert.  (Tilsvarer ´DESTDIR´
for vanlige makefiler.)

−− Mozilla-sertifikater
For å kopiere over Mozillas sertifikater til en ny Mozilla katalog trenger
man to filer: ´cert8.db´ og ´key3.db´.

−− Tidssone
La ´/usr/share/zoneinfo/localtime´ peke på ´/etc/localtime´,
som igjen skal peke på ´/usr/share/zoneinfo/Europe/Oslo´.  Kan også
bruke programmet ´tzselect´, som vil vise hva variabelen ´TZ´ skal
settes til.

−− Xauth
Lag først en tilfeldig 128-bit nøkkel:
´
key=`hexdump -n16 -e '16/1 "%02x"' /dev/random`
´
(Kan også bruke ´mcookie´ til dette.)  Skriv så følgende:
´
xauth add `hostname -f`:0 . $key
xauth add `hostname`:0 . $key
´
Editér så ´~/.xserverrc´ og pass på at den inneholder
´
exec X :0 -dpi 100 -auth $HOME/.Xauthority
´

−− Ramdisk-størrelse
Sett størrelse med parameter ´ramdisk_size=“SIZE-IN-KB”´ når ramdisk er
kompilert inn i kjernen, og bruk ´rd_size´ hvis den er modul.

−− CD-brenning med mkisofs + cdrecord
Kompiler SCSI (´CONFIG_SCSI´), SCSI CD-ROM (´CONFIG_BLK_DEV_SR´),
SCSI generic (´CONFIG_CHR_DEV_SG´), og SCSI emulation
(´CONFIG_BLK_DEV_IDESCSI´) som moduler.  Last inn modulene i følgende
rekkefølge:  ´scsi_mod.o´, ´sg.o´, ´sr_mod.o´, ´ide-scsi.o´.
Nå skulle IDE CD-spillerene være tilgjengelige som ´/dev/sr0´,
´/dev/sr1´, osv.    Lag et ISO-image med kommandoen
´
mkisofs -J -r -o “IMAGE-FILE DIRECTORY”
´
hvor ´“DIRECTORY”´ vil bli roten i det nye filsystemet.
Skriv selve CD-en med kommandoen
´
cdrecord -v driveropts=burnfree speed=2 dev=“SCSIBUS,TARGET,LUN” -data “IMAGE-FILE”
´
der ´“SCSIBUS,TARGET,LUN”´-verdiene kan fås med kommandoen ´cdrecord -scanbus´.
I nyere Linux-kjerner er det mulig å bruke ´/dev/hd“X”´ direkte (når man brenner
med ATAPI i stedet for SCSI emulation).

Den beste måten å konfigurere dette på hvis man har både ATAPI-leser og brenner
er å legge følgende i ´/etc/modules.conf´:
´
options ide-cd        ignore=hdd
pre-install sg        modprobe ide-scsi
pre-install sr_mod    modprobe ide-scsi
pre-install ide-scsi  modprobe ide-cd
´
Av en eller annen grunn funker ikke autoloading når man monterer
cdrecorder som vanlig bruker, via ´user´ i ´/etc/fstab´.

−− Sletting av CD med cdrecord
For å slette alt som ligger på CD-en:
´
cdrecord blank=fast -immed dev=IOCompactDiscServices dev=“RECORDER-DEVICE”
´

−− Brenning av video DVD
´
growisofs -dvd-compat -Z /dev/dvd=“/path/to/dvd.iso”
´

−− CD-dumping med cdrdao
Følgende kommandoer kan brukes for å dumpe ut CD-er til ISO:
´
cdrdao read-cd --device “/dev/cdrecorder” --datafile “foo.iso” /tmp/foo.toc
´
I dette tilfellet kan ´/tmp/foo.toc´ slettes siden filen ikke er
nødvendig for rene ISO-filer.  For CDRWINs BIN/CUE format kan følgende
metode brukes:
´
cdrdao read-cd --read-raw --device “/dev/cdrecorder” --datafile “foo.bin” “foo.toc”
toc2cue “foo.toc” “foo.cue”
rm -f “foo.toc”
´

−− CD-brenning med cdrdao
Følgende kommandoer kan brukes for å brenne f.eks. BIN/CUE-filer med cdrdao:
´
cdrdao write --device /dev/cdrecorder --driver generic-mmc “foo.cue”
´

−− Konvertere binære datafiler til objektkode
For å konvertere filen ´foo.bin´ til objektfilen ´foo.o´,
så skriver man ´ld -s -r -b binary foo.bin -o foo.o´.
Flagget ´-s´ betyr strip, og ´-b binary´ betyr at den
neste filen på kommandoenlinjen er av dette formatet.  For å få
normal alignment på ´.rodata´, så kan man linke inn en
vanlig objektfil først, som godt kan være helt tom:
´
touch dummy.c
gcc -c dummy.c
ld -s -r dummy.o -b binary foo.bin -o foo.o
´
Merk at ´dummy.o´ kommer før ´-b binary´!  Det er også mulig
å definere symbolnavn selv, ved å lage et linkescript.  I eksempelet
over lager ld symbolene ´_binary_foo_bin_start´ og
´_binary_foo_bin_stop´.  Følgende linkescript lager alternativene
´foo_start´ og ´foo_end´:
´
OUTPUT_FORMAT("elf32-i386")
OUTPUT_ARCH(i386)
SECTIONS
{
  .data :
  {
        foo_start = .;
        *(.data)
        foo_end = .;
  }
}
´
For å bruke scriptet sier man ´-T “ld-script”´ til ld.
En enda lettere måte å linke med et vanlig program er:
´
gcc -Wl,-b,binary foo.bin -Wl,-b,elf32-i386 bar.c -o foobar
´

−− Bogofilter
Trening av filteret:
´
bogofilter -d “DB-DIR” [-s | -n] [-M] -B “FILENAMES”...
´
der ´“DB-DIR”´ er katalogen hvor orddatabasen skal bli skrevet,
´-s´ tagger mailen som spam og ´-n´ tagger mailen som non-spam.
Bruk ´-M´ for å si at vanlige filer (i ´“FILENAMES”´) er
mbox'er, ikke enkeltstående mails.

For å bruke bogofilter med procmail, bruk følgende procmail-regel:
´
:0 fw
| nice -19 bogofilter -u -e -p
´
Flagget ´-u´ får bogofilter til å registrere mailens tekst
i databasen etter den er klassifisert som spam/non-spam.
´-e´ betyr at bogofilter skal returnere 0 uansett om meldingen
er spam eller ikke, unntatt når det skjedde noe feil.
´-p´ betyr at bogofilter skal skrive ut en kopi av mailen som
kom på stdin til stdout, men med en X-Bogosity header satt inn.

For å tagge alle meldinger med spam score mindre enn 0.10 som non-spam,
alle mellom 0.10 og 0.95 som usikre, og alle over 0.95 som spam, legg
´
ham_cutoff = 0.10
spam_cutoff = 0.95
´
i ´~/.bogofilter.cf´ og
´
:0
* ^X-Bogosity: (Yes|Spam)
junk/Spam/

:0
* ^X-Bogosity: Unsure
junk/Pending/
´
etter bogofilter i procmail-reglene.

−− NTP
La ´/etc/ntp.conf´ på NTP-serveren inneholde følgende:
´
¡# Permit time synchronization with our time source, but do not
¡# permit the source to query or modify the service on this system.
restrict default nomodify notrap noquery

¡# Permit all access over the loopback interface.  This could
¡# be tightened as well, but to do so would effect some of
¡# the administrative functions.
restrict 127.0.0.1

¡# Allow all local hosts to perform ntpq and ntpdc queries.
restrict 10.0.0.0 mask 255.0.0.0 nomodify notrap

¡# Undisciplined Local Clock. This is a fake driver intended for backup
¡# and when no outside source of synchronized time is available. The
¡# default stratum is usually 3, but in this case we elect to use stratum
¡# 10. Since the server line does not have the prefer keyword, this driver
¡# is never used for synchronization, unless no other other
¡# synchronization source is available. In case the local host is
¡# controlled by some external source, such as an external oscillator or
¡# another protocol, the prefer keyword would cause the local host to
¡# disregard all other synchronization sources, unless the kernel
¡# modifications are in use and declare an unsynchronized condition.
server 127.127.1.0
fudge 127.127.1.0 stratum 10

¡# The real NTP servers.
server “SERVER1”
server “SERVER2”
...

¡# Log the intrinsic frequency error on the local clock.  This
¡# allows the ntp program to be even more accurate, since it can
¡# compensate for the drift between each server sync.
driftfile /etc/ntp.drift

logfile /var/log/ntp.log
´
For klientmaskinene bruker man samme ´ntp.conf´, men erstatt
alle ´server´-linjene med én enkelt ´server “ADDR”´ der ´“ADDR”´
er addressen til maskinen som ble satt opp som NTP-server.  Start opp ntpd,
men merk at det kan ta ‗lang‗ tid (over 20 minutter) før klientene
klarer å bruke NTP-serveren, pga. at serveren ikke slipper til klienter
før den har synkronisert seg ordentlig mot sine eksterne servere.
(Det vil sannsynligvis dukke opp en linje i NTP-loggen som sier
´kernel time sync disabled´ omtrent samtidig som serveren er klar.)

−− RSH
På Red Hat/Fedora må både klient- og serverpakken installeres, hhv.
´rsh´ og ´rsh-server´.  Deretter må de to inetd-tjenestene ´rsh´
og ´rlogin´ skrus på, og inetd restartes.  Følgende fremgangsmåte for
Red Hat/Fedora:
´
chkconfig rsh on
chkconfig rlogin on
service xinetd restart
´
For å tillate login uten passord fra en bestemt maskin til en
bestemt bruker, gjør ´echo “IP-ADDRESS” >~“USER”/.rhosts´.

−− Starte nytt prosjekt med bzr
For å lage et nytt repository i katalog ´/path/to/bzrrepo´:
´
bzr init-repo --no-trees /path/to/bzrrepo
´
Et prosjekt ´foo´ kan legges til i repositoryet med
´
bzr init /path/to/bzrrepo/foo
´
Dette prosjektet kan så sjekkes ut med ´bzr co´.  Dersom man skal
sjekke ut fra en annen maskin over SFTP, så kan følgende syntaks brukes:
´
bzr co sftp://“SERVER”/path/to/bzrrepo/foo
´
Man kan videre gjøre en såkalt "light checkout" av denne for å slippe
å ha masse søppel i prosjektets ´.bzr´ katalog, men likevel ha fordelen
av å kunne gjøre diff o.l. operasjoner uten å bruke nettet:
´
bzr co --lightweight /path/to/full/checkout/foo foo
´

−− Starte nytt prosjekt med CVS
For å lage et nytt repository på ekstern server i katalog ´/path/to/cvsroot´:
´
cvs -d :ext:“SERVER”:/path/to/cvsroot init
´
Deretter kan man begynne å bruke repository'et ved å gjøre:
´
cvs -d :ext:“SERVER”:/path/to/cvsroot import -m 'imported sources' “PROJECT-DIRECTORY” vendor release
´

−− LCD-tweaking for laptop
For å manuelt dimme backlight, bruk
´
xbacklight -set “PERCENT”
´
For å klone laptopens LCD-display til VGA, gjør
´
xrandr --output LVDS --auto --output VGA --auto --same-as LVDS
´
For å sette oppløsning:
´
¡# Oppløsning spesifisert direkte
xrandr -s “WIDTH”x“HEIGHT”
¡# Ved indeks
xrandr -s “INDEX”
´

−− Skru på composite mode uten tearing (NVidia)
´
sudo nvidia-xconfig --composite --metamodes="$(xrandr | awk -vs=", " '$2=="connected"{printf "%s: nvidia-auto-select { ForceFullCompositionPipeline = On }%s", $1, s; s=""}')"
´

−− Bruk av HDMI ved spilling av video
For å klone laptopens LCD-display til HDMI, gjør
´
xrandr --output LVDS1 --auto --output HDMI1 --auto --same-as LVDS1
´
Alternativt, dersom ´--auto´ ikke gir gode resultater, kan man
prøve å skalere ved å legge til ´--scale “X”x“Y”´. En tredje mulighet
er å lage en egen mode. Eksempel:
´
xrandr --newmode "custom1024x768" 63.50 1024 1072 1176 1328 768 771 775 798 -hsync +vsync
xrandr --addmode HDMI1 custom1024x768
´
Denne brukes deretter med
´
xrandr --output HDMI1 --mode custom1024x768
´
Neste trinn er audio. Finn ut hvilket device som er HDMI output med
´
aplay -l
´
Man kan så bruke mplayer til å spille video på HDMI:
´
mplayer -ao alsa:device=hw=“X”.“Y” ...
´
For å skru av HDMI1, gjør
´
xrandr --output HDMI1 --off
´

−− Touchpad-innstillinger på CL56-laptop
For å få riktige innstillinger (som vanlig mus, og uten tapping), inkludér
følgende i ´/etc/X11/xorg.conf´:
´
Section "ServerLayout"
	InputDevice    "Synaptics" "AlwaysCore"
EndSection

Section "Module"
	Load  "synaptics"
EndSection

Section "InputDevice"
	Identifier  "Synaptics"
	Driver      "synaptics"
	Option	    "Device" "/dev/input/mice"
	Option	    "Protocol" "auto-dev"
	Option	    "Emulate3Buttons" "yes"
        ¡# Disable tapping.
        Option      "MaxTapTime" "0"
        ¡# Disable coasting.
        Option      "CoastingSpeed" "0"
        ¡# No vertical scrolling area in the edges of the display.
        Option      "VertScrollDelta" "0"
        ¡# No horizontal scrolling area in the edges of the display.
        Option      "HorizScrollDelta" "0"
        Option      "MinSpeed" "0.15"
        Option      "MaxSpeed" "0.80"
EndSection
´

−− Wireless-radio på CL56-laptop
Radioen må skrus på med <url: http://www.informatik.hu-berlin.de/~tauber/acerhk/>
Acer Hotkey driver</url>.  Last inn denne driveren, og gjør
´echo 1 >/proc/driver/acerhk/wirelessled´ for å skru på radioen.

−− Trådløs WEP-oppkobling
For å konfigurere mot et aksesspunkt som bruker WEP-kryptering, gjør
følgende:
´
iwconfig eth1 essid “NAME” mode managed channel “CHANNEL” key “KEY”
while iwconfig eth1 | grep -q 00:00:00:00:00:00; do
    echo 'Access point not found... retrying in 1 second.' 2>&1
    sleep 1
done
´
Det kan hende, avhengig av aksesspunkt, at det er nødvendig å
legge til ´restricted´ eller ´open´ etter ´key´.
For å sette adresse kan man så kjøre ´dhclient eth1´ eller sette
adresse manuelt:
´
ifconfig eth1 “IP-ADDRESS”
route add default gw 10.0.0.1 eth1
´


−− Trådløs WPA-oppkobling
Lag en ´wpa_supplicant.conf´ som inneholder:
´
ctrl_interface=/var/run/wpa_supplicant
ctrl_interface_group=wheel

network={
        ssid="“NAME-OF-ACCESS-POINT”"
        psk="“PASSWORD”"
        scan_ssid=1
}

network={
	ssid="any"
	key_mgmt=NONE
}
´
Start så ´wpa_supplicant´ med kommandoen
´
sudo wpa_supplicant -B -i“WIRELESS-NETWORK-INTERFACE” -c“/path/to/wpa_supplicant.conf”
´
der ´“WIRELESS-NETWORK-INTERFACE”´ er f.eks. ´eth1´.

−− Seriell-konsoll
For å få Linux-konsollen sendt over seriell nullmodem-kabel, legger
man ´console=ttyS0,115200n8´ på kjernens kommandolinje på maskinen
hvis log skal observeres.  På maskinen som skal se på loggen bruker
man minicom med følgende konfigurasjonsfil (´/etc/minirc.dfl´):
´
pr port             /dev/ttyS0
pu baudrate         115200
pu rtscts           No 
´
Start så minicom, og loggen vil vises på skjermen.  For å dumpe til
fil, trykk ´Ctrl-A L´.  ´Ctrl-A X´ avslutter minicom.

−− Bruk av USB flash som erstatning for floppy-boot
(Antar i det følgende at ´/dev/flash´ refererer til flash-devicet,
og at ´/dev/flash1´ er flashens første partisjon.)
´
# ·parted /dev/flash
(parted) ·mklabel msdos
Warning: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost. Do you want to continue?
Yes/No? ·y
(parted) ·mkpart primary fat32 0% 100%
(parted) ·set 1 boot on
(parted) ·quit
# ·mkdosfs /dev/flash1
# ·syslinux --install /dev/flash1
# ·dd conv=notrunc if=/usr/share/syslinux/mbr.bin of=/dev/flash
# ·mount /dev/flash1 /media
# ·cp /usr/share/syslinux/memdisk /media
# ·cat <<\EOF >/media/syslinux.cfg
·default dos
·label dos
·  kernel memdisk
·  append initrd=disk.img
·EOF
# ·dd if=/dev/zero of=/media/disk.img bs=1k count=1440
# ·mkdosfs /media/disk.img
# ·mount -o loop /media/disk.img /mnt
¡<copy DOS system files into /mnt>
# ·umount /mnt
# ·ms-sys -1 -f /media/disk.img
# ·umount /media
´
Hvis man ikke har ´ms-sys´, så skal det holde å gjøre
´
# ·dd conv=notrunc if=floppy_bootsector.bin of=/media/disk.img
´
Last ned bootsectoren her: «floppy_bootsector.bin − files/floppy_bootsector.bin».

Merk at ´“disk.img”´ skal være rådata fra floppydisken, og ‗må‗ være i en
av de standard floppy-størrelsene (360K, 720K, 1200K, 1440K, 1680K, 1722K,
eller 2880K). (´“disk.img”´ kan være et gzippet floppy-image, i hvilket
tilfelle størrelsen ikke trenger å være som over så lenge resultatet av gunzip
blir en standard floppy-størrelse.)

−− Bruk av aspell til å lage ordlister for vim/look/osv
For å lage en sortert ordliste for norsk:
´
aspell dump master norsk | sort >~/share/dict/norsk
´

−− Fikse bakgrunnsfarge som henger fra mutt
Fjern ´bce´ fra terminfo:  Kjør først ´infocmp >xterm.ti´ for å
generere en terminfo fil ved navn ´xterm.ti´.  Editér og fjern
´bce´ dersom det finnes, og kjør ´tic xterm.ti´ for å installere
oppdatert terminfo.  Slett så ´xterm.ti´.

−− Baklengs VNC
Start ´vncviewer´ på Linux-boksen med ´vncviewer -listen´.  Dette
gjør at ´vncviewer´ vil lytte på port 5500.  På serversiden, som
ligger bak en NAT-router, kobler man så til klientens IP-adresse.

−− Kryptering/dekryptering med OpenSSL
´
¡# List ciphers
openssl -h

¡# encrypt
openssl enc -aes-128-cbc -K ffeeddccbbaa99887766554433221100 -iv 00112233445566778899aabbccddeeff -in file.txt -out file.txt.enc

¡# decrypt
openssl enc -d -aes-128-cbc -K ffeeddccbbaa99887766554433221100 -iv 00112233445566778899aabbccddeeff -in file.txt.enc
´

−− Sende POST requests med curl
Eksempler:
´
¡# Store cookies in session-cookies.txt, and POST body specified on cmdline:
curl \
 -c session-cookies.txt \
 -d 'username=Fred&password=1234' \
 -o “OUTPUT” \
 “URL”

¡# As above, but POST body stored in postbody.xml and set Content-Type to XML.
curl \
 -H 'Content-Type: text/xml' \
 -d @postbody.xml \
 -o “OUTPUT” \
 “URL”
´

−− Ubuntu VM
Bruk "Host only adapter" i nettverkstype, og sett opp routing på host med
´
#!/bin/bash

set -x
wan_iface=em1
lan_iface=vboxnet0
ip=192.168.56.102

iptables -F
iptables -t nat -F
iptables -X
iptables -t nat -X

iptables -t nat -A POSTROUTING -o $wan_iface -j MASQUERADE
iptables -A FORWARD -i $lan_iface -j ACCEPT
echo 1 >/proc/sys/net/ipv4/ip_forward

iptables -t nat -A PREROUTING -i $wan_iface -p tcp --dport 10245 -j DNAT --to-de
iptables -t nat -A PREROUTING -i $wan_iface -p tcp --dport 8765:8766 -j DNAT --t
iptables -t nat -A PREROUTING -i $wan_iface -p udp --dport 8765:8766 -j DNAT --t
´
Deretter må nettet settes opp tilsvarende i guest Ubuntu sin ´/etc/network/interfaces´:
´
# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet static
address 192.168.56.102
netmask 255.255.255.0
gateway 192.168.56.1
dns-nameservers 10.20.64.4 10.20.64.5
dns-search oslo.osa
´
Restart nettet i guest med
´
/etc/init.d/networking restart
´
Guest OS kan startes uten GUI med
´
vboxmanage startvm --type headless “VM-NAME”
´
Evt. med minimalt GUI ved å bytte ut "headless" med "sdl".

−− Bridge mode på Nextgentels Thomson TG789vn på Telenor nett (IPoE)
Få admin-bruker, logg inn på modemet og utfør:
´
¡# Bind ethernet port number 4 to the VDSL connection.
:eth bridge vlan ifadd name=dummy intf=ethport4
¡# Unbind ethernet port number 4 from the NAT'ed default connection.
:eth bridge vlan ifdelete name=default intf=ethport4
¡# Apply the changes and make them permanent.
saveall
´

−− Mounting av Android-telefon
Installer SIMPLE-MTPFS og gjør ´simple-mtpfs /MOUNT-POINT´.

−− Legge til CA certificates for Firefox/Chrome HTTPS
Last ned alle ´*.crt´ filene som skal legges til i trust-databasen og utfør:
´
sudo trust anchor *.crt
´

−− Liste åpne porter og hvilke programmer som har åpnet dem
´
¡# -P gjør at porter vises med tall i stedet for navn.
sudo lsof -iTCP -sTCP:LISTEN -P
´

−− Dark themes
−−− GTK 3.x
La ´~/.config/gtk-3.0/settings.ini´ inneholde:
´
[Settings]
gtk-theme-name = Mint-Y-Dark-Blue
´

−−− GTK 2.x
La ´~/.gtkrc-2.0´ inneholde:
´
gtk-theme-name = "Mint-Y-Dark-Blue"
´

−−− QT5
Pass på at ´qt5-qtstyleplugins´ og ´gtk-murrine-engine´ er installert. Deretter:
´
export QT_QPA_PLATFORMTHEME=gtk2
´

−−− QT4
La ´~/.config/Trolltech.conf´ inneholde:
´
[Qt]
style=GTK+
´

−−− LibreOffice
Gå til ´Tools → Options → View → Icon style´ og velg ´Breeze Dark´.

−−− Google Chrome
Installer «Just Black − https://chrome.google.com/webstore/detail/just-black/aghfnjkcakhmadgdomlmlhhaocbkloab».
